<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Covatubala.github.io</id>
    <title>Covatubala的小木屋</title>
    <updated>2022-11-16T02:11:03.291Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Covatubala.github.io"/>
    <link rel="self" href="https://Covatubala.github.io/atom.xml"/>
    <subtitle>若是心向明月，纵然不慎受挫也会失落在星辰之间。&lt;br/&gt;

</subtitle>
    <logo>https://Covatubala.github.io/images/avatar.png</logo>
    <icon>https://Covatubala.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Covatubala的小木屋</rights>
    <entry>
        <title type="html"><![CDATA[我的自白书]]></title>
        <id>https://Covatubala.github.io/post/wo-de-zi-bai-shu/</id>
        <link href="https://Covatubala.github.io/post/wo-de-zi-bai-shu/">
        </link>
        <updated>2022-10-24T09:27:50.000Z</updated>
        <content type="html"><![CDATA[<h1 id="我的自白书">我的自白书</h1>
<p>每个人都充斥矛盾和荒谬。</p>
<h2 id="回避性人格">回避性人格</h2>
<p>1、不喜欢亲密称呼，老婆、宝宝、宝贝等等会感觉恶心，看到别人在亲密关系里这么称呼，也会不舒服。</p>
<p>2、不喜欢亲密接触，把性和爱分的很清楚。也许在床上表现的很积极，但是不需要温存，出门的时候，拉手和单纯的亲亲都不喜欢，可能不会直接拒绝，但会以拿手机、太热等等理由挣脱。</p>
<p>3、不相信未来，对未来绝对悲观主义，最常说的是及时行乐和自由至上。</p>
<p>4、可能有抑郁倾向，内耗非常严重。</p>
<p>5、对次亲近一圈的人都很不信任，包括女朋友和好朋友，反而对外圈的同事或者同学表现出开朗活泼、暧昧温柔的一面。</p>
<p>6、不喜欢麻烦别人，也不喜欢别人麻烦我。</p>
<p>7、什么事都往坏处想，所有的关系都是利益关系。</p>
<p>8、坚信女朋友早晚会不爱自己，会出轨，所以对女朋友的行为表现得非常无所谓。</p>
<p>9、滴水之恩涌泉相报，讨厌别人的关心，比如对她好，给她买早饭、送礼物会等价或者翻倍还回去。如果是人情上的帮助，会拼命还人情，然后默默远离这个人，因为我还不了。</p>
<p>10、对于情侣之间的分歧，能想到的唯一解决办法就是分手换一个，所以很少出现以分手引起你重视的情况，如果说了分手，就真的是想分手，起码对方已经永远划到短期关系里了。</p>
<p>11、需要自己的空间，绝大多数不会同居，即使同居也会偶尔逃出去。</p>
<p>12、不爱聊天，这点确实很矛盾，回避型一般很以自我为中心，所以喜欢发表意见，不喜欢听别人高谈阔论，但也不知道自己聊的话题你想不想聊，怕你不感兴趣所以干脆不聊。</p>
<p>13、很少和别人分享情绪，也不在乎别人的情绪，如果你不开心了，那你就冷静一下再说。</p>
<p>14、看起来很阳光很开朗，和大家关系都很好，但是没什么好朋友。</p>
<p>15、不会吃回头草，无论多喜欢。因为如果对方求和，回避型会瞧不起这种人；但回避型求和，ta会瞧不起自己。</p>
<p>16、不希望对方以任何名义约束自己，即使是ta自己提出的你来监督减肥、监督学习等等也不行，只要你说了，ta就会觉得你嫌弃ta。</p>
<p>17、喜欢养鱼，因为他们不能忍受自己选择了一个唯一，却被抛弃的感觉。</p>
<p>18、喜欢保持神秘，擅长撒谎。</p>
<p>19、喜欢自嘲和自我否定，如果我把自己说的一文不值，就没有人能再贬低我。</p>
<p>20、无法真心接受别人的夸奖，对方一定是在客套。</p>
<p>21、外强中干。</p>
<p>22、不会向对方提要求，只会在心里默默减分，相信感情不需要改变只需要选择。</p>
<p>23、不会吵架，大多冷暴力。</p>
<p>24、暧昧期很甜，愿意做一切像男朋友的事情，但是真在一起之后会觉得这样恶心。</p>
<p>25、如果关系进展迅猛，初期很甜，那结束的更快，并且绝不可能被挽回。</p>
<p>26、如果ta不爱你，可能你会觉得ta很喜欢你；如果ta真的喜欢你，你会觉得ta讨厌你。</p>
<p>27、很少主动开启话题。</p>
<p>28、讨厌自来熟的人，欣赏高冷的人。</p>
<p>29、出去玩必须当被关注的人，如果多人的场合没人关注ta，就会很难过。</p>
<p>30、对大多数人保持40%的自我暴露，对亲密好友最多到70%，没有人可以真正了解他们。</p>
<p>31、擅长见人说人话，见鬼说鬼话，对不同的人有不同的面孔。</p>
<p>32、喜欢自己独处，但是不喜欢被别人知道自己一个人，怕被人误解为孤独。</p>
<p>33、基本上都不打算结婚，无论是否认清自己的问题，不想祸害别人。</p>
<p>34、微信或者微博肯定有小号，要不然就是不喜欢发。</p>
<p>35、无法面对别人的质问，会选择逃避。</p>
<p>36、需要自己的时间，但不会直接说，可能会在情侣互道晚安之后再去干别的事情，只是为了逃开质问。</p>
<p>37、不喜欢考虑未来，如果情侣规划未来，会说再说，或者表面答应，实际想着怎么离开你。</p>
<p>38、大多数情况很理智，但如果被人戳穿了回避或者撒谎、冷暴力的问题，会非常暴躁，会情绪崩溃反过来口不择言指责对方。</p>
<p>39、绝对的悲观主义</p>
<p>40、自我主义，对别人的关注仅仅局限在别人对自己的印象和看法上，希望保持在他人心中的良好形象。</p>
<p>41、不相信会有人爱自己，觉得对方一定是还没看到自己的缺点，但也不会把缺点给别人看。</p>
<p>42、完美主义，做不好干脆不做。</p>
<p>43、缺乏共情能力，无法感知别人痛苦，但会演出很同情、很难过的样子。</p>
<p>44、会刷存在感，希望别人注意到自己，但是别人注意到的时候，会推辞拒绝。</p>
<p>45、异性恐惧。</p>
<p>46、自恋与自卑共存，瞧不起大多数人的同时觉得自己谁也比不上。</p>
<p>47、认为每个人应该处理好自己的问题，不应求助于他人。</p>
<p>48、周围的朋友都觉得这个人很难交心。</p>
<p>49、不相信爱情和一切情感，即使是结婚也没有爱情，只有合适。</p>
<p>50、在他身边，你常常会觉得他是不是在鄙视你但不说。</p>
<p>51、喜欢虐待别人，喜欢看别人为了挽回自己而痛苦，举极端的例子，比如为了挽回关系下跪、在大雨里等她，她不会因此回心转意，只会觉得你很卑微，然后瞧不起你或者是很爽。</p>
<p>52、喜欢虐待自己（1）自己生闷气但不说理由，不让别人安慰。（2）不喜欢表达，有想法希望别人来发现，否则就在心里上演小剧场，觉得自己很伟大很奉献。</p>
<p>53、一部分会有讨好型人格，喜欢放弃自己的一些利益来迎合别人，但对伴侣会斤斤计较。</p>
<p>54、会自我麻痹和表演。</p>
<p>55、网络上可能会比较积极表达和表现，喜欢藏在电脑背后发泄阴暗想法。</p>
<p>56、大多数的疲惫感和痛苦不来自于外界，来自于内心。</p>
<p>57、对陌生人勇敢表达，一旦成为朋友就会羞于表达爱意。</p>
<p>58、缺乏正确的金钱观，要不就是非常喜欢攒钱，一分都不化；要不就是特别能花，千金散尽；很难有计划地做事。</p>
<p>回避型整体上来说是非常自私的一类人，这种人格本身肯定不是完全健康的，所以不建议在调整心态之前去开始关系，伤害别人。为了获取爱意、填补自己就随便开始的话，是在消耗自己本就不多的耐心和情感，未来遇到真的心动嘉宾也是遗憾的事情。</p>
<p>所以不论是从哪个角度，都不应该把问题对号入座，发现自己是回避就破罐子破摔，把问题推给回避。还是应该积极自救，不过目前的回答都是只说问题不说具体措施，所以如果以后发现了有效的解决办法也会一并补充在这里。</p>
<p>Q：回避型和渣有什么区别？说实话，没区别。无论他是怎么想的，他是不是痛苦，是不是主观问题，给伴侣造成的痛苦是相同的。甚至更过分在于伴侣可能会理解回避，出于同情和爱，想要挽救回避型，导致伴侣一次又一次地被渣。也许回避型会被治愈会变好，但是在没被治愈之前他就是会推开你，就是会在你面前故意气你，就是会对你的一切付出视若无睹，就是会养鱼，他就是对这段关系没有安全感。无论你如何付出，即使把心掏出来给他看，他也可能会觉得你好卑微，然后离开你。除非你有极大的耐心和毅力，爱到非他不可，比ta妈都爱ta，还要掌握一些技巧，对他若即若离忽冷忽热，耐住性子不去找你爱的这个人，才有可能会有好结果。但也不好说，毕竟一部分回避型连爸妈也不信任，他们只相信自己。</p>
<h2 id="双子座">双子座</h2>
<p>据我观察，风向星座的三个星座中双子座其实是最偏现实的一个，比如外人看不到的现实、专一、悲观、缺乏安全感这样的特征。这话乍一听像句废话，有点儿巴纳姆效应的意思。</p>
<p>不过这个星座的人的确大部分属于想的太多思维发散的那一类人，所以想的太多难免会比较敏感，会比较现实。</p>
<p>双子座的人天生重视感觉，是感性重于理性的星座。年轻的双子座可以称之为追求感觉，成熟的双子座可以称之为追求精神寄托。这想必也是为什么历史上双子座会出那么多文学家艺术家的缘故。</p>
<p>曹雪芹、但丁、柯南道尔、朗朗、辛弃疾、普希金、卢梭、蒲松龄、玛丽莲梦露，这些古今中外的名人都是双子座。</p>
<p>本来就是如此，人活一世难道就是为了生老病死，繁衍后代如此现实么？在双子座看来，精神领域中的寄托才是一个人真正生活的意义所在。这也是为什么看上去吊儿郎当、三分钟热度的双子座在自己真正热爱的领域中能够获得成就的原因。</p>
<p>双子座顾名思义，是一个双生人格的星座，用人格分裂来形容其实也是过于夸张了。一个人不论什么星座总有感性和理性的时候，有乐观和悲观的时候。但是由于双子座重视感觉，在这两个情绪下看待同一件事却会产生不同的看法。心情乐观的时候，仿佛全世界都是光芒，人间布满真爱一样。面对喜欢的人可以说无比坚定地相信爱情，甚至愿意为爱赴汤蹈火。</p>
<p>而悲观的时候仿佛又回到现实的阴影中，认为全世界自己最孤独，可面对这孤独又无能为力。会变得很丧但又无可奈何，也不相信什么永恒。</p>
<p>这也是双子座外热内冷的原因之一，你所看到的只是双子座想让你看到的，他们是天生的演员。我可以这么说，双子座拥有全十二星座最强的适应能力，只要环境符合他们的标准，他们可以胜任任何工作。双子座善于总结经验，善于学习模仿。但是也有一个缺点就是后知后觉，举例而言就是在没有遭遇失败之前他是很固执地不会觉得自己有错误的，而一旦遭遇失败他们就会怀疑自己之前的做法出了问题开始积极寻找原因，试图改变现状。</p>
<p>基于这一点也可以说越成熟的双子座人格魅力也就越高，情商也就越高。你可能会说哪个人都这样，谁不是越成熟情商越高？这个真的有区别，双子座的成熟一定是建立在挫折之上的，而非阅历。有些星座像摩羯处女越成熟越现实，而双子座越成熟反而越悲天悯人越温柔。这里的情商高就在于即便对方对自己没有什么利益关系，可双子座依旧愿意照顾对方的感受，想着让对方感到舒适。</p>
<p>所以很多跟双子座做了很多年的朋友的人也会觉得他们性格很善良，很体贴也懂得分寸。这就来源于他们日积月累的观察和判断以及对于自己情绪的把控。</p>
<p>所以说成熟的双子座和年轻的双子座真的天差地别。年轻的双子座有点像狮子座射手座，成熟的双子座像摩羯座金牛座。年轻的双子座在没有经历人生社会的考验之前是缺点多于优点，智商高于情商的。很多年轻双子座喜欢炫耀管不住自己的嘴，喜欢当传话筒，控制不住自己的情绪。跟恋人也是忽冷忽热，心情好了爱你一生一世，心情不好别来烦我。这不是双子座真的不考虑别人的感受，而是他们行动快过了大脑，大脑还没来得及思考这么做合不合适，结果话已经说出去了，事也办出去了。</p>
<p>在没有被别人真正地指责或者摔跟头之前双子座是不会改变的。随着时间的流逝，有更多地人指出他们的问题，说双子座情商低，情绪化，双子座就会陷入自我怀疑的过程中。这个自我怀疑的过程一般都是发生在深夜，他们才会意识到改变，要逐渐用大脑中那个悲观、冷静、稳重的人格来代替现在的自己。</p>
<p>但是很遗憾，这样的努力不会发生任何变化。第二天回到那个熟悉的环境面对熟悉的人他们依旧那样没心没肺。因为他们太容易受环境的影响了，所以环境变了才意味着双子座的性格会改变。他们会想着赶紧换个环境换一批人，然后展现不一样的自己。</p>
<p>这也意味着双子座换朋友一般都是一批一批地换，我在这个圈子里待不下去了，即便这里有几个人跟我关系还非常好，但我依旧不能停滞不前，我要离开这里。这就是双子座内心所想，然后他们就索性离开这个圈子中所有人，去适应新的环境新的生活。只有换了环境之后双子座才会进入一个新的阶段，他们的脾气性格才会逐步走向成熟。</p>
<p>一个成熟的双子座一定不会像世俗所说的那样多情善变。</p>
<p>他们会驾驭自己心中那个躁动不安的灵魂，这也是双子座在修炼自己终极技能：见人说人话见鬼说鬼话的过程。看到这里的双子座朋友，如果你们还年轻请相信自己，你们的潜力是无穷的。</p>
<p>所以很多双子座并不是那样活泼开朗的，反而会很有分寸。在工作中在办公室我就一心一意工作，跟领导同事之间严肃认真，在图书馆课堂上我就认真学习，在外面玩我就放飞自我。他们分得清环境懂得调整自己。像其他的很多星座就没有这个本事，摩羯座也是喜欢讲究自己的人设，在生人和熟人面前展现不一样的自己，在工作中矜矜业业，玩的时候也是尽兴的玩。但是摩羯座长时间维持人设会把自己逼疯的，他们需要释放因为他们外冷内热。而双子座就不需要任何释放，他们只会认为这是自己的不同状态而已并不存在刻意去迎合环境。</p>
<p>双子座重视感觉，感觉影响内在，这是跟双子座携手一生的关键。双子座在恋爱初期最好不要拿老夫老妻的标准来要求他（她），最好是先把他们当作一个玩伴，跟他们一起品尝爱情的甜蜜。随着时间推移，他们后知后觉的发现自己已经被你捕获了，因为即便自己不需要找乐子的时候却还是会想念你，会离不开你。那也就意味着双子座认定你这个人了，从这时开始，双子座的专一已经可以比拟金牛摩羯处女了。</p>
<p>所以双子座虽然像风一样，感觉什么都留不住他们的心，但其实你只要打开他们的内心给他们一个空气流通的环境，你会发现不管你走到哪里，他（她）都会像风一般无处不在的陪伴你。</p>
<h2 id="情感缺失">情感缺失</h2>
<p>简单来说，像我们这样的情感缺失者，在生活中往往会缺少以下许多东西。</p>
<p>缺乏共情能力。很难感同身受地体会到他人的笑点或者泪点，对于笑话、悲剧、文艺、矫情等绝大多数故事并无特别大的感触，甚至觉得如白开水一般平铺直叙，面对亲人的去世，在其他人哭成一条狗的情况下，自身却流不出一滴眼泪。</p>
<p>乐于独处，喜欢独自一人。</p>
<p>对于恋爱保持无感的态度，甚至觉得自己一人能过得更好，而拥有伴侣是一件非常麻烦并令人感到恐惧的事情。</p>
<p>善于模仿和揣摩别人的心思，通晓世故，故而对外伪装出出一副“我很开朗”“我是个正常人”的样子来维持正常的日常生活，实则全是演的。往往在人走后，立刻就会流露出自己冷漠的面孔。</p>
<p>不争不抢，对生活丧失信心和激情，即使偶尔三分钟热度打鸡血也一般比别人去得更快，并在在这种心血来潮过去之后，情感缺失的症状会变得更加严重。</p>
<p>不愿意维持友情、亲情、爱情，朋友圈极小。</p>
<p>体会不到正常人的情绪，就算发生了什么好事和坏事，情感流于表面的程度也远远低于正常人，微微一笑和撇撇嘴估计就是情感缺失者表露真实感情的上限了。</p>
<p>大多数在画画、写作等与文学艺术挂钩的方面表现出很高的天赋，同样这些工作一般只需要一个人便能完成。</p>
<p>不在乎他人看法，对人与人之间进行价值化处理，因此不愿意为他人付出，即便是亲密的友人。从来都是独善其身。</p>
<p>一定程度的多疑，不信任除自己之外的任何人。</p>
<p>与人接触频繁的时候情感缺失的症状可能会好一些，但回归平静的生活过后，会再次复发，严重程度和天气、心情等因素挂钩。</p>
<p>喜欢匿名发表自己的见解，不乐于自身的隐私和私人空间被窥视。</p>
<p>情感缺失的人像是灵魂被劈成了两半，冷酷无情地剥离开来。</p>
<p>其中一半流露于体外，它们一般是冷静、理智加以无穷无尽的思考。</p>
<p>另一半沉于体内，是细腻的感情、关怀、爱和情绪以及执行能力。</p>
<p>走出这种症状的唯一办法就是把自己置于阳光之下，让沉于体内的另一半不得不流露于体表，久而久之也便成了真正的<a href="https://www.zhihu.com/search?q=%E9%9D%A2%E7%9A%AE&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:329107126%7D">面皮</a>。</p>
<p>毕竟这确实是一种很痛苦的症状，自从患病以来，鄙人便一直是“不合群”“孤独”的代名词，虽然鄙人从不这么觉得，但难免会被打上很多负面的标签。</p>
<p>情感缺失，不是一种病，或者一种命运，而是一种状态，一种持续的，反复的状态。 这意味着这种状态可以暂时的消失掉。</p>
<p>也许坐在电脑前或者手机面前的你，此时此刻感觉，世间与你无牵无挂，时间仿佛静止。但是超出这个状态时你不会这样想，当你和几个朋友在一起玩的时候，你的确能感受到一些乐趣，但也许就在你离开朋友的瞬间，你嘴上的笑容也会立刻回归平静，这个时候，情感缺失的状态回来了，此时的你无法与之前和朋友玩的时候的快乐产生共鸣，无法感性上理解刚才的乐趣，也即是情感消退后留下来的只有理性，于是你推断，自己是一个没有情感的人，刚才的笑容都是逢场作戏，因为逻辑上应该笑所以才笑。但是这样的逻辑却没有想到一个东西，当时和朋友在一起的你还不是现在的你，还有着喜怒哀乐。</p>
<p>当情感缺失这种状态继续持续下去，进入这种状态的时间越来越多，脱离这种状态的时间越来越少，于是你看上去就变得越来越冷漠。这时，有些人说你高冷，有些人说你不通<a href="https://www.zhihu.com/search?q=%E4%BA%BA%E6%83%85%E4%B8%96%E6%95%85&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:419533022%7D">人情世故</a>。 其实不是这样的，感情缺失只剩理性的你只是单纯失去了去做事情的激情，你依然清楚，应该怎样回应别人的问题，怎样在大街上打招呼，怎样做会让人感觉宾至如归，这些需要用到感情的社交你都知道如何去做，但是没有激情，你终究没有去做。这个时候，你看待自己就如同看待行尸走肉，失去了对未来的展望。这个时候你也许会越来越疲倦，越来越习惯孤单，但很多人没发现的是，你的创造力也达到了高峰。</p>
<p>感情缺失，既然是一种状态，那就可以存在一种感情丰盈的状态，这一点，本人做到了。也许现在打字的我没有太多的情感，但我知道我常有的另一种感情丰盈的状态是确实存在的，哪怕现在的我无法理解那时的我的心境，但这并不妨碍我从记忆中找到关于其的证据。</p>
<p>那时的我……</p>
<p>相信爱情，心里的那个人能把我从一切消极的状态中拉出，变得鸡血十足，以至于在敲下这句话的时候，我都感觉到自己的内心有什么东西被唤醒、都有想写下他名字的幸福。</p>
<p>相信正义，我会在各个社交媒体上，运用我所学习的各个领域的知识，去编织感染力十足的言语来让被愤怒与偏见笼罩的酸民们回到坦途，就仿佛自己是那个追求正义理想的<a href="https://www.zhihu.com/search?q=%E5%A0%82%E5%90%89%E8%AF%83%E5%BE%B7&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:419533022%7D">堂吉诃德</a>一样，哪怕全世界的大多数站在自己的对立面，也有向其刺出正义之剑的怒火。</p>
<p>充满求知欲，对于一切有价值的知识犹如海绵一样汲取，攻破了观点与观点之间的逻辑链 总能让我热血沸腾，充满挑战的心总是在跳动。</p>
<p>但出了这个感情丰盈状态的我，依然会变得冷漠。</p>
<p>毕业晚会上其他人热泪盈眶，我却只能低下头或者捏表情来掩饰自己的平静。</p>
<h2 id="外热内冷">外热内冷</h2>
<p>外热内冷对于我来说是一个非常自然的表现不是刻意的 更不是装的 就是在大众面前有自然的热情 与其说是热情 其实更应该算表现欲</p>
<p>但在和熟悉的人独处时又会不自觉的变得冷淡</p>
<p>事实上我应该算是一个温柔的人但对于很多事情我都会持不关心 不在意的心理</p>
<p>这种心理有多严重呢？严重到与你交心的朋友忽然与你断绝一切联系你也不会有一丝情绪起伏。</p>
<p>但这不代表外热内冷的人不会感到悲伤事实上他们内心很脆弱 只是强烈的表现欲不允许他们对其他人展露悲伤 甚至是最亲近的人</p>
<p>外热内冷的人一般不会让普通朋友觉得他是一个内冷的人普通朋友对他的印象可能就是一个热情的人 但是他的家人会觉得他是一个冷漠的人 只有与他交心的人才会发觉 他是一个外热内冷的人</p>
<p>外热内冷的人很难给予其他人百分百的信任比如答主就有轻度的被害妄想症 有时候会怀疑周围的人甚至是亲人是否有杀死自己的想法并在短时间内计划逃跑路线 不过这些都是答主多虑了 其实答主也不想怀疑周围的人 但是控制不住</p>
<p>如果你成功的与一个外热内冷的人成为了交心的朋友那么恭喜你 他会是一个很好的倾听者 而且请你放心 你就算将自己最隐蔽的一面展示给他 他也绝对不会背叛你 前提是你不能触及他的底线 一旦触及到他的底线 他可能会毫不留情的与你绝交</p>
<p>外热内冷的人一般都有强烈的自我保护意识 但不会有伤害他人的想法</p>
<p>他们不喜欢口头承诺因为对于他们来说没有约束力的承诺毫无意义 他们也不喜欢给他人承诺反而更喜欢用实际行动</p>
<p>外热内冷的人经常会在外头嘻嘻哈哈打闹一天但回到家后又觉得自己的人生是多么无趣</p>
<p>他们会一直觉得自己的生活很平淡但他们习惯了平淡 如果你想接近他们 只需要给他们一点惊喜 比如相同的爱好 比如给他最近想要的东西 但请不要刻意表现的热情 这会使他们对你保持警惕如果你发现他们对你有防备之心时 请一定不要生气 因为这是他们不自觉的自我保护行为 他们甚至自己都没有意识到自己在警戒你</p>
<p>如果一个外热内冷的人爱上了一个人那他爱上的对象一定会是一个温柔的人 因为他们的生命中缺少这份温柔他们一旦爱上了对方 就会死心塌地的付出 而且几年也不会变心 所以 如果你喜欢上了一个外热内冷的人 请让他自己留意你温柔的一面 但不要刻意对他温柔 这会引起他的警戒 自然的温柔杀伤力更大</p>
<p>总体来说外热内冷的人一点也不可怕 外热是他的社交方式 内冷是他的处事风格 这样的人往往有强烈的自我保护意识 或许伴随着轻度的被害妄想症 他们会有很多朋友但很少有交心的朋友 他们往往是一个温柔的人 喜欢温柔的人 他们不喜欢没有约束力的承诺 喜欢实际的付出 他们自认为生活很平淡 不会完全信任任何人但会是一个值得被信任的人 如果他把你当交心朋友 那你可以把他当做一个情绪垃圾桶 放心 他们不会嫌你烦 因为他们很珍惜每一个交心朋友</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[我与交大]]></title>
        <id>https://Covatubala.github.io/post/tan-tan-wo-dui-jiao-da-ben-ke-jiao-yu-de-gan-shou/</id>
        <link href="https://Covatubala.github.io/post/tan-tan-wo-dui-jiao-da-ben-ke-jiao-yu-de-gan-shou/">
        </link>
        <updated>2022-10-05T18:24:37.000Z</updated>
        <content type="html"><![CDATA[<h1 id="小学">小学</h1>
<p>第一次和交大结缘大概是在小学五年级玩游戏的时候。</p>
<p>那时一位发小上午做课间操时候偷偷摸摸跑过来，跟我挤眉弄眼，说发现了一款美少女游戏，这的确对小屁孩有极大吸引力，这就是我第一次接触崩坏学园2。</p>
<p>经历漫长的压缩包打开及安装后，映入眼帘的首先便是“TECH OTAKUS SAVE THE WORLD”，也就是“技术宅拯救世界”，随后大大的Mihoyo跳了出来，像是伸出手来，问你是否愿意同它与全世界对抗。</p>
<p>进入游戏，横版萌系手游在神庙逃亡那个年代未免过于超前，虚拟摇杆操纵美少女拯救崩坏礼乐的学院对我内心的震撼同样无与伦比。尤其对我影响深远的便是游戏中频繁出现的中二话语，想必是来自开发者满满关怀。</p>
<p>崩二对我人生影响大抵确实是蛮大的，帮我开启了二次元这个支线的同时，也把我的审美从年幼就塑造成了日系萝莉风，脑子一天天都在想着学校秩序破坏的那一天到来时，要怎么拿起手中的武器和琪亚娜·卡斯兰娜并肩作战。</p>
<p>那时的我最大的梦想就是造一个像崩坏学园二这样优秀的游戏，其次是开一家能够实现空间挪移的超市。</p>
<p>我对见到大佬抽卡前，消耗十余个大喇叭在世界频道喊大伟哥牛逼/怒艹大伟哥，而后就会抽出稀有属性武器的行为惊叹不已，去百度搜索才得知大伟哥就是米哈游总裁，上海交通大学毕业。</p>
<p>那时还会时常去调戏游戏客服妹子，现在想想想必和大伟哥有过不少语言交流。</p>
<h1 id="初中">初中</h1>
<p>后来，初中的时候也玩过崩坏三，然而有点晕3D所以兴趣泛泛，随之相关的记忆也都隐隐约约淡忘掉了。</p>
<h1 id="高中">高中</h1>
<p>直到高中时候学奥赛时一次高校进校园给高三的宣讲会，虽然我们当时才高二，教练老吕给我们说了几个大学，让我们逮这几个听就行了，其他的听了也不管事。其中之一便是交大，我才重新以一位高中生的角度来认识这个只存在于大伟哥世界的大学。</p>
<p>大概是个野鸡学校？毕竟名字起的有点烂大街，啊不，或者说烂大街上都不会有人取的名字吧...</p>
<p>这倒也不怪我，只是当时与清华，北大，复旦同时提起时候总是觉得交大会矮它们一头，就连浙大也是突出重点，短促有力。</p>
<p>名字里带了交通确实会承载时光追溯的痕迹，又称土。</p>
<p>结果就是，那次宣讲会我连排在整个榜单最下方的<a href="https://baike.baidu.com/item/%E6%98%86%E5%B1%B1%E6%9D%9C%E5%85%8B%E5%A4%A7%E5%AD%A6/2455348">昆山杜克大学</a>都逛了逛，却忽略了交大。</p>
<p>大概是当时对于交大的录取分数还没有一个清晰的认识。</p>
<p>高三从奥赛退下来，意识到自己有多菜，也把高二教练塞进来美好的幻想全部收好</p>
<blockquote>
<p>这几个学校计算机还好点，随便考哪个都行</p>
</blockquote>
<p>也通过高考分数线线性评判了交大，使得它在我心中的地位明显飞速上升，然而以我日常几千名的水准，当时我把北京理工大学当成目标都费劲，也就没产生那么多无谓的幻想。</p>
<p>直到高考前10天自主复习前的最后一个体活，照例是该洗澡或者瘫在宿舍喃喃着高考的惆怅的。</p>
<p>那天正下着小雨，高一二的学弟学妹们已经收拾好教室为我们高考考场腾出空间。我闲的无聊，在读报机随意乱点，竟然发现似乎已经很久不能看推送的新闻了，这么一想，索性提上雨伞就向着高一楼出发。</p>
<p>雨点稀稀拉拉，地面倒是已经铺上一层水，这全要感谢衡中这令人诟病的排水系统，下大雨，下水道倒灌回不了宿舍似乎都发生过不止一次。</p>
<p>在高中，似乎一点不同寻常的事情都可以成为记忆点，哪怕是天气。</p>
<p>走到公告栏，几个拼凑起来的字母总让我想起Billboard，大风把精神教育题材的展牌刮到地上，当时搬到这里也是有我的一份功劳的。</p>
<p>猜测可能会封高考考场，正门果然没开，然而侧门居然还留了个小缝，我合上雨伞，进入大厅。</p>
<p>打开读报机。果然，熟悉的新闻界面加载速度喜人，按照往常习惯，我在科技和娱乐区翻了翻，又想起来似乎真的快要高考了，这时候也应该积累些作文素材吧，于是从隔壁教室拿出来一根笔和一页便签纸，趴在读报机上就开始记。</p>
<p>烂笔头还是很有作用的，现在回忆起来都还能想起来喜茶疯狂扩张上市无望和美国一州设立疫苗彩票开奖5w美金这两则新闻。</p>
<p>翻着翻着，眼尖瞅见米哈游刘伟，心神一动就点开了，这则新闻是对刘伟的一则访谈，讲述了早期创办米哈游的经历，包括在D32和两位室友共同创立米哈游，申请创业基金等事件。</p>
<p>这一次再看到交大，我的思考就变得丰富而多层次了。况且是在这样的一个特殊的时间段，给我留下了极度深刻的印象。</p>
<p>我反反复复看了这则访谈看了五六遍，一直到体活接近尾声才匆匆忙忙往回赶。</p>
<p>和过去不同时间段认知相比，这次交大大概才真正扎根在心里了。</p>
<p>即使有点晚。</p>
<p>我是因为米哈游大伟哥的母校情节&amp;分数正好够来到的交大，对交大的憧憬还没有建立完全就被打破，这么一想倒是省去了不少内心美化的功夫。</p>
<p>《<a href="https://survivesjtu.gitbook.io/survivesjtumanual/">交大求生手册</a>》开篇语说道</p>
<blockquote>
<p>国内绝大部分大学的本科教学，不是濒临崩溃，而是早已崩溃。</p>
</blockquote>
<p>撰写小册子的学长没想到，就连我们也没想到，这个手册里的绝大多数内容，放在14年后的今天依然成立。</p>
<p>其次，就是本科绩点计算时单独划出A+一档，以及中午十二点五十五上课这种奇葩的排课方式。当然，这么美好的时间，大多留给了我们的课——所谓的“红课”。“红课”也是我来交大工作后才听说的新名词，我读书的时候，大家都称公共课、基础课。反正，都是一种称呼，背后的情感色彩，不能说没有。</p>
<p>过度看中分数，只要给分高，就可以忽视其他问题，似乎是一个通病。哪怕天天念ppt，只要最后给A+，就是好样的。在理性选择的驱动下，划水成为一种日常。有的ppt甚至几年不更新一张，里面的案例和素材早就过时，结果还在使用。既然老师划水，学生为什么不划呢？于是大家一起划。所以思源湖的作用一下子就凸显了。赛艇队这么厉害，是不是也有这个原因？亦可赛艇！</p>
<p>缺乏通识教育，特别是人文社科的通识教育，是另一个大问题。开不齐人文社科的课程，是交大的一个痛点。之前有交大领导回怼别人的批评，说交大也有文科啊。对方也是个直性子，继续回怼，除了你的凯原法学院，其他有成体系的文科专业吗？然后这位领导就不说话了。<br>
确实如此，没有成体系的文科专业，就无法开齐人文社科的通识课。比如社会学、宗教学、艺术学、伦理学、逻辑学、历史学、政治学等等，都应该开齐。这里我主要讲的是基础性课程，例如社会学导论，历史学通论等，而非专题性课程。</p>
<p>当然，有人会说，这些课程有用吗？对卷院的学生卷分数有用吗？</p>
<p>问题是，我告诉你有用，你信吗？</p>
<p>用脚步丈量祖国的山河，多出去溜达溜达，去基层，去一线，去各种拐弯抹角。不一定要参与其中，但一定要学会做一个好的旁观者。这就是社会学。</p>
<p>当你进入一个单位，试图搞清楚其中复杂的人际关系和权力网络，避免踩坑，避免成为工具人，不给自己职业晋升增加不必要的阻碍。这就是政治学。</p>
<p>当你远离家乡求学，坐着火车，第一个中秋在学校独自度过的时候，你会突然想起王勃的“关山难越，谁悲失路之人。萍水相逢，尽是他乡之客”。这就是文学。</p>
<p>培养自己观察社会的分析能力，重构一种非社会达尔文主义的共情能力，尝试获得自我排遣、聊以自慰的调适能力，这就是人文社科的力量。</p>
<p>自然科学让我们明白运动是有规律的，社会科学则是告诉我们，即便这种规律被打破，你也要学会适应，生存，甚至重塑。脚踏实地的同时，不要丧失仰望星空的梦想。</p>
<p>人生不是，也不应该是一台精确无误的仪器。不确定性，是最核心的确定性。</p>
<p>人之为人，是有一种超脱生存本身的理想主义的冲动。尽管理想主义，已经遭到了现实主义最后的围堵。</p>
<p>但我看到的，是本科教育，过于强调这种“精确无误”。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[为什么我需要一间独立宿舍？]]></title>
        <id>https://Covatubala.github.io/post/wei-shi-me-wo-xu-yao-yi-jian-du-li-su-she/</id>
        <link href="https://Covatubala.github.io/post/wei-shi-me-wo-xu-yao-yi-jian-du-li-su-she/">
        </link>
        <updated>2022-10-04T06:43:45.000Z</updated>
        <content type="html"><![CDATA[<p>在国内读大学，你可以享受¥1200一年极其低廉的住宿费，但代价就是会有另外三个人和你住在一起。</p>
<p>我大概是最早就开始住集中宿舍的一批人了。</p>
<p>因为家长工作繁忙，从幼儿园起就住在了老师的家里。初中回到老家，我又不得不搬进了班主任的托管班里。高中封闭式管理更是不可例外。</p>
<p>那么对于有着丰富宿舍生活经验的我来说，看上去似乎早已习惯和大家一同生活。那么为什么我会依然需要一间独立宿舍呢？我觉得这可能跟不同时期的追求，以及我的心理有关。</p>
<p>在过去的这么多宿舍生活里，其实宿舍解决的核心需求只有一样，也就是睡眠问题，无论小学初中还是高中，你能做的只有释放掉学习以外无处宣泄的压力，没有机会去追求除了文化课以外的其他东西（当然，这也跟我身处的填鸭式教育有关）</p>
<p>而进入大学阶段，突然多出了很多空闲时间以供我无所事事。在大一这一年我没有完成任何事情，在宿舍里也只是在永无止境的刷知乎、逛B站、看论坛、打王者荣耀，仅此而已。</p>
<p>而这不是我想要的，并且我确实在这些事件里获取不到任何快乐，有的只是成功打发时间后的空虚。</p>
<p>大学之前，不同活动有专属地点是宿舍和谐的必要前提。之前的宿舍生活，大家拥有同样的作息时间以及课程安排。回到宿舍就是为了休息的，干饭去食堂，学习去教学楼，因此宿舍生活的主调还是和谐欢愉的。</p>
<p>然而大学的宿舍是不同的，正是因为大学生活本就不同于之前的日子。假如宿舍等同于我的家，那它必然需要适配我各个方面的要求，但这实在与“不能干扰他人生活”的集体宿舍模式不能搭配。拿我自己举例子，我忍受不了别人在旁边窥探我做任何事情，所以室友闲的没事干，过来看我在干什么的时候，这在我看来真是无法忍受。我同样很不舒服的一件事情，便是你只要做任何一件脱离“制度化”的事情，比如自学一门不在专业体系内的课程，他们便会用一种浮夸的语调来重复这件事情，这实在使得我很恼火。</p>
<p>我无法在宿舍里锻炼，因为太过狭窄的空间以及室友的目光；就连俯卧撑我都要拉下窗帘后到窗户外面做，假如让我意识到别人在看我，这种事情会让我极度不适。</p>
<p>我无法在宿舍里唱歌，弹吉他，练popping，录音轨。因为总有人会不去图书馆选择在宿舍里学习，并且理直气壮地说道：</p>
<blockquote>
<p>你能不能不要再xxx了，我在学习，谢谢。</p>
</blockquote>
<p>而出于礼貌，我每次也必定都是道歉加停止我的行为收场的。</p>
<p>但其实这里有一个很矛盾的点：</p>
<blockquote>
<p>假如一个人因为另一个人干扰了他的生活而要求停止他的行为，那这个人是不是也本质上干扰了另一个人的生活呢？</p>
</blockquote>
<p>是的，你的生活里只有学习我可以尊重并且理解，但这并不是你干涉我的生活，并且试图把我同化的理由。宿舍应该是一个“藏污纳垢”的地方，包罗万象，假如你不去图书馆学习，那你就自然没有资格指责我不去琴房而在宿舍练习吉他。</p>
<p>当然，这其中也有我的原因，其中最大的一点便是太过考虑他人意见。是的，设想如果无论别人怎么讥讽或是嘲弄我都无动于衷，那我自然可以干任何事情都轻松自如，不需要在意他人目光。然而我不能，这大抵是从小养成的陋习，需要一点点来调整，或者究其根本这本就不是一个陋习，善于吸取他人意见，从善如流和对他人话语敏感难道不就是正反话两头说而已吗。我既然占取了一头的好处，也就理应承受另一头的坏处。</p>
<p>我们应该把宿舍回归到本质上来，那便是睡觉，只要我满足在大家休息的时候不打扰，那其他时候我做任何事情指责都是不应该的。这是因为只有睡觉，在校园里是没有其他可以替代的场所的，也就是宿舍核心功能所在。</p>
<p>讲了这么多，似乎又把宿舍回归到了初高中的功能了。</p>
<p>或许去繁从简，去芜存菁是必然的流程吧。</p>
<p>不可省略，无从代替。</p>
<p>当然，这也只能是美好的幻想罢了，我没有能力也没有义务去改变他人的生活习性，因此只能改变自己。既然有种种不适，那我自己住一间不就好了吗？</p>
<p>一次偶然，让这个愿景变成光照进了现实。</p>
<p>交大第二次封校是在2022秋学期开学后的第一天中午。在这次封校中，我又双叒叕经历了无数次心理内耗，最终断定自己还是不想要浑浑噩噩随大流走的校园生活，于是打算练习尘封一年的吉他。然而压抑沉默的宿舍环境让我非常恶心，更别提我刚刚拿起吉他就辅以奚落的室友</p>
<blockquote>
<p>又开始练吉他了？挺勤奋的哈</p>
</blockquote>
<p>果然，在这种环境下，成为芸芸众生才是最保险的最“温和”不受刺激的。</p>
<p>我泡在这样的温水里泡了一年，现在我终于忍受不了了，跳出去，哪怕摔死也没关系。</p>
<p>于是我带着吉他去找阿姨，询问阿姨能不能借用会议室练吉他，我不想干扰室友。</p>
<p>所以你看啊，我又把责任巧妙转移到自己身上了。</p>
<p>然而出乎我的意料，阿姨直接让我用了“爱心房”。什么是爱心房呢？在每栋楼栋考虑到会有意外受伤的同学上下楼会比较麻烦，于是可以临时使用一楼的这间宿舍省去爬楼梯的烦恼。在疫情期间，这间宿舍被当成了阿姨们的宿舍，而现在宿舍解封了自然就空出来了。</p>
<p>这可真是意外之喜，况且这个房间不上锁因此我可以随时发挥我的主观思考来到这里做事情，而再也无须考虑别人是否因为我而受到影响了（人总是卑微的，善于往自己身上揽错）</p>
<p>于是，我在校园内，有了一间比校外租房体验还要棒的房子。</p>
<p>虽然它离我的宿舍只有一个走廊，但在这里我可以肆意妄为，去实现诸多因为各种事情耽搁的想法，让我不至于循规蹈矩的本科四年而留下遗憾。</p>
<p>吉他、剪辑、编曲、CSAPP、Popping、Hiit......真的有太多东西等着我去做了。</p>
<p>现在，终于我缺少的只是时间了。</p>
<p>等着我吧。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[From Nand to Tetris学习笔记]]></title>
        <id>https://Covatubala.github.io/post/from-nand-to-tetris-xue-xi-bi-ji/</id>
        <link href="https://Covatubala.github.io/post/from-nand-to-tetris-xue-xi-bi-ji/">
        </link>
        <updated>2022-08-10T00:22:31.000Z</updated>
        <content type="html"><![CDATA[<h1 id="week1">Week1</h1>
<h2 id="theoerm">Theoerm</h2>
<p>• (x AND (y OR z)) = (x AND y) OR (× AND z)<br>
• (× OR (y AND z)) = (x OR y) AND (x OR z)<br>
• NOT(x AND y) = NOT(x) OR NOT(y)<br>
• NOT(x OR y) = NOT(x) AND NOT(y)</p>
<h2 id="hdl-survival-guide">Hdl Survival Guide</h2>
<p>Add16(a= ,b= ,out= );<br>
ALU(x= ,y= ,zx= ,nx= ,zy= ,ny= ,f= ,no= ,out= ,zr= ,ng= ); And16(a= ,b= ,out= );<br>
And(a= ,b= ,out= );<br>
ARegister(in= ,load= ,out= );<br>
Bit(in= ,load= ,out= );<br>
CPU(inM= ,instruction= ,reset= ,outM= ,writeM= ,addressM= ,pc= ); DFF(in= ,out= );<br>
DMux4Way(in= ,sel= ,a= ,b= ,c= ,d= );<br>
DMux8Way(in= ,sel= ,a= ,b= ,c= ,d= ,e= ,f= ,g= ,h= );<br>
DMux(in= ,sel= ,a= ,b= );<br>
DRegister(in= ,load= ,out= );<br>
FullAdder(a= ,b= ,c= ,sum= ,carry= );<br>
HalfAdder(a= ,b= ,sum= , carry= );<br>
Inc16(in= ,out= );<br>
Keyboard(out= );<br>
Memory(in= ,load= ,address= ,out= );<br>
Mux16(a= ,b= ,sel= ,out= );<br>
Mux4Way16(a= ,b= ,c= ,d= ,sel= ,out= );<br>
Mux8Way16(a= ,b= ,c= ,d= ,e= ,f= ,g= ,h= ,sel= ,out= );<br>
Mux(a= ,b= ,sel= ,out= );<br>
Nand(a= ,b= ,out= );<br>
Not16(in= ,out= );<br>
Not(in= ,out= );<br>
Or16(a= ,b= ,out= );<br>
Or8Way(in= ,out= );<br>
Or(a= ,b= ,out= );<br>
PC(in= ,load= ,inc= ,reset= ,out= );<br>
RAM16K(in= ,load= ,address= ,out= );<br>
RAM4K(in= ,load= ,address= ,out= );<br>
RAM512(in= ,load= ,address= ,out= );<br>
RAM64(in= ,load= ,address= ,out= );<br>
RAM8(in= ,load= ,address= ,out= );<br>
Register(in= ,load= ,out= );<br>
ROM32K(address= ,out= );<br>
Screen(in= ,load= ,address= ,out= );<br>
Xor(a= ,b= ,out= );</p>
<h1 id="week2">Week2</h1>
<h2 id="冯诺伊曼结构">冯·诺伊曼结构</h2>
<figure data-type="image" tabindex="1"><img src="https://Covatubala.github.io/post-images/1660270330617.png" alt="" loading="lazy"></figure>
<h2 id="alu">ALU</h2>
<h1 id="week3">Week3</h1>
<h2 id="寄存器">寄存器</h2>
<p><img src="https://Covatubala.github.io/post-images/1660375390478.png" alt="" loading="lazy"><br>
<img src="https://Covatubala.github.io/post-images/1660375637143.png" alt="" loading="lazy"></p>
<h2 id="ram">RAM</h2>
<p>RAM &quot;Random Access Memory&quot;</p>
<h2 id="rom">ROM</h2>
<p>ROM &quot;Read Only Memory&quot;</p>
<h2 id="flash">FLASH</h2>
<p>FLASH == RAM + ROM</p>
<h2 id="cache-memory">Cache Memory</h2>
<h1 id="week4">Week4</h1>
<h2 id="hack-computer-hardware">Hack computer: hardware</h2>
<figure data-type="image" tabindex="2"><img src="https://Covatubala.github.io/post-images/1661047184152.png" alt="" loading="lazy"></figure>
<h2 id="the-c-instruction-symbolic-and-binary-syntax">The C-instruction: symbolic and binary syntax</h2>
<figure data-type="image" tabindex="3"><img src="https://Covatubala.github.io/post-images/1660444127994.png" alt="" loading="lazy"></figure>
<h2 id="the-hack-character-set">The Hack character set</h2>
<figure data-type="image" tabindex="4"><img src="https://Covatubala.github.io/post-images/1660466228347.png" alt="" loading="lazy"></figure>
<h2 id="hack-assembly-instructions">Hack assembly instructions</h2>
<figure data-type="image" tabindex="5"><img src="https://Covatubala.github.io/post-images/1660695160784.png" alt="" loading="lazy"></figure>
<h1 id="week5">Week5</h1>
<h2 id="the-overall-computer-architecture">The Overall Computer architecture</h2>
<figure data-type="image" tabindex="6"><img src="https://Covatubala.github.io/post-images/1661255435489.png" alt="" loading="lazy"></figure>
<h2 id="hack-cpu-interface">Hack CPU Interface</h2>
<figure data-type="image" tabindex="7"><img src="https://Covatubala.github.io/post-images/1661250108345.png" alt="" loading="lazy"></figure>
<h2 id="hack-cpu-implementation">Hack CPU Implementation</h2>
<figure data-type="image" tabindex="8"><img src="https://Covatubala.github.io/post-images/1661067488900.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[zshrc配置]]></title>
        <id>https://Covatubala.github.io/post/zshrc-pei-zhi/</id>
        <link href="https://Covatubala.github.io/post/zshrc-pei-zhi/">
        </link>
        <updated>2022-08-07T06:33:00.000Z</updated>
        <content type="html"><![CDATA[<p>利用oh-my-zsh+powerlevel10k+Hack Regular Nerd Font构建漂亮终端</p>
<pre><code class="language-sh"># Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot; ]]; then
  source &quot;${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh&quot;
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=&quot;$HOME/.oh-my-zsh&quot;

# Set name of the theme to load --- if set to &quot;random&quot;, it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( &quot;robbyrussell&quot; &quot;agnoster&quot; )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE=&quot;true&quot;

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE=&quot;true&quot;

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE=&quot;true&quot;

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT=&quot;true&quot;

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=&quot;true&quot;

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS=&quot;true&quot;

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE=&quot;true&quot;

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION=&quot;true&quot;

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS=&quot;true&quot;

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY=&quot;true&quot;

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# &quot;mm/dd/yyyy&quot;|&quot;dd.mm.yyyy&quot;|&quot;yyyy-mm-dd&quot;
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS=&quot;mm/dd/yyyy&quot;

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

# source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH=&quot;/usr/local/man:$MANPATH&quot;

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS=&quot;-arch x86_64&quot;

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig=&quot;mate ~/.zshrc&quot;
# alias ohmyzsh=&quot;mate ~/.oh-my-zsh&quot;


# prompt_context() {
#   if [[ &quot;$USER&quot; != &quot;$DEFAULT_USER&quot; || -n &quot;$SSH_CLIENT&quot; ]]; then
#     prompt_segment red default &quot;%(!.%{%F{yellow}%}.)$USER&quot;
#   fi
# }
source ~/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# POWERLEVEL9K_MODE='Hack Nerd Font Mono'

#    ~  cat .p10k.zsh                                       ✔  11:31:37  
# Generated by Powerlevel10k configuration wizard on 2020-11-30 at 10:05 CST.
# Based on romkatv/powerlevel10k/config/p10k-rainbow.zsh, checksum 24826.
# Wizard options: nerdfont-complete + powerline, small icons, rainbow, unicode,
# 24h time, angled separators, sharp heads, flat tails, 1 line, sparse, many icons,
# concise, instant_prompt=quiet.
# Type `p10k configure` to generate another config.
#
# Config for Powerlevel10k with powerline prompt style with colorful background.
# Type `p10k configure` to generate your own config based on it.
#
# Tip: Looking for a nice color? Here's a one-liner to print colormap.
#
#   for i in {0..255}; do print -Pn &quot;%K{$i}  %k%F{$i}${(l:3::0:)i}%f &quot; ${${(M)$((i%6)):#3}:+$'\n'}; done

# Temporarily change options.
'builtin' 'local' '-a' 'p10k_config_opts'
[[ ! -o 'aliases'         ]] || p10k_config_opts+=('aliases')
[[ ! -o 'sh_glob'         ]] || p10k_config_opts+=('sh_glob')
[[ ! -o 'no_brace_expand' ]] || p10k_config_opts+=('no_brace_expand')
'builtin' 'setopt' 'no_aliases' 'no_sh_glob' 'brace_expand'

() {
  emulate -L zsh -o extended_glob

  # Unset all configuration options. This allows you to apply configuration changes without
  # restarting zsh. Edit ~/.p10k.zsh and type `source ~/.p10k.zsh`.
  unset -m '(POWERLEVEL9K_*|DEFAULT_USER)~POWERLEVEL9K_GITSTATUS_DIR'

  # Zsh &gt;= 5.1 is required.
  autoload -Uz is-at-least &amp;&amp; is-at-least 5.1 || return

  # The list of segments shown on the left. Fill it with the most important segments.
  typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
    os_icon                 # os identifier
    dir                     # current directory
    vcs                     # git status
    # prompt_char           # prompt symbol
  )

  # The list of segments shown on the right. Fill it with less important segments.
  # Right prompt on the last prompt line (where you are typing your commands) gets
  # automatically hidden when the input line reaches it. Right prompt above the
  # last prompt line gets hidden if it would overlap with left prompt.
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
    status                  # exit code of the last command
    command_execution_time  # duration of the last command
    background_jobs         # presence of background jobs
    direnv                  # direnv status (https://direnv.net/)
    asdf                    # asdf version manager (https://github.com/asdf-vm/asdf)
    virtualenv              # python virtual environment (https://docs.python.org/3/library/venv.html)
    anaconda                # conda environment (https://conda.io/)
    pyenv                   # python environment (https://github.com/pyenv/pyenv)
    goenv                   # go environment (https://github.com/syndbg/goenv)
    nodenv                  # node.js version from nodenv (https://github.com/nodenv/nodenv)
    nvm                     # node.js version from nvm (https://github.com/nvm-sh/nvm)
    nodeenv                 # node.js environment (https://github.com/ekalinin/nodeenv)
    # node_version          # node.js version
    # go_version            # go version (https://golang.org)
    # rust_version          # rustc version (https://www.rust-lang.org)
    # dotnet_version        # .NET version (https://dotnet.microsoft.com)
    # php_version           # php version (https://www.php.net/)
    # laravel_version       # laravel php framework version (https://laravel.com/)
    # java_version          # java version (https://www.java.com/)
    # package               # name@version from package.json (https://docs.npmjs.com/files/package.json)
    rbenv                   # ruby version from rbenv (https://github.com/rbenv/rbenv)
    rvm                     # ruby version from rvm (https://rvm.io)
    fvm                     # flutter version management (https://github.com/leoafarias/fvm)
    luaenv                  # lua version from luaenv (https://github.com/cehoffman/luaenv)
    jenv                    # java version from jenv (https://github.com/jenv/jenv)
    plenv                   # perl version from plenv (https://github.com/tokuhirom/plenv)
    phpenv                  # php version from phpenv (https://github.com/phpenv/phpenv)
    scalaenv                # scala version from scalaenv (https://github.com/scalaenv/scalaenv)
    haskell_stack           # haskell version from stack (https://haskellstack.org/)
    kubecontext             # current kubernetes context (https://kubernetes.io/)
    terraform               # terraform workspace (https://www.terraform.io)
    aws                     # aws profile (https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html)
    aws_eb_env              # aws elastic beanstalk environment (https://aws.amazon.com/elasticbeanstalk/)
    azure                   # azure account name (https://docs.microsoft.com/en-us/cli/azure)
    gcloud                  # google cloud cli account and project (https://cloud.google.com/)
    google_app_cred         # google application credentials (https://cloud.google.com/docs/authentication/production)
    context                 # user@hostname
    nordvpn                 # nordvpn connection status, linux only (https://nordvpn.com/)
    ranger                  # ranger shell (https://github.com/ranger/ranger)
    nnn                     # nnn shell (https://github.com/jarun/nnn)
    vim_shell               # vim shell indicator (:sh)
    midnight_commander      # midnight commander shell (https://midnight-commander.org/)
    nix_shell               # nix shell (https://nixos.org/nixos/nix-pills/developing-with-nix-shell.html)
    vi_mode                 # vi mode (you don't need this if you've enabled prompt_char)
    # vpn_ip                # virtual private network indicator
    # load                  # CPU load
    # disk_usage            # disk usage
    # ram                   # free RAM
    # swap                  # used swap
    todo                    # todo items (https://github.com/todotxt/todo.txt-cli)
    timewarrior             # timewarrior tracking status (https://timewarrior.net/)
    taskwarrior             # taskwarrior task count (https://taskwarrior.org/)
    time                    # current time
    # ip                    # ip address and bandwidth usage for a specified network interface
    # public_ip             # public IP address
    # proxy                 # system-wide http/https/ftp proxy
    # battery               # internal battery
    # wifi                  # wifi speed
    # example               # example user-defined segment (see prompt_example function below)
  )

  # Defines character set used by powerlevel10k. It's best to let `p10k configure` set it for you.
  typeset -g POWERLEVEL9K_MODE=nerdfont-complete
  # When set to `moderate`, some icons will have an extra space after them. This is meant to avoid
  # icon overlap when using non-monospace fonts. When set to `none`, spaces are not added.
  typeset -g POWERLEVEL9K_ICON_PADDING=none

  # When set to true, icons appear before content on both sides of the prompt. When set
  # to false, icons go after content. If empty or not set, icons go before content in the left
  # prompt and after content in the right prompt.
  #
  # You can also override it for a specific segment:
  #
  #   POWERLEVEL9K_STATUS_ICON_BEFORE_CONTENT=false
  #
  # Or for a specific segment in specific state:
  #
  #   POWERLEVEL9K_DIR_NOT_WRITABLE_ICON_BEFORE_CONTENT=false
  typeset -g POWERLEVEL9K_ICON_BEFORE_CONTENT=

  # Add an empty line before each prompt.
  typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

  # Connect left prompt lines with these symbols. You'll probably want to use the same color
  # as POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_FOREGROUND below.
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX='%242F╭─'
  typeset -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX='%242F├─'
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX='%242F╰─'
  # Connect right prompt lines with these symbols.
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_SUFFIX='%242F─╮'
  typeset -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_SUFFIX='%242F─┤'
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_SUFFIX='%242F─╯'

  # Filler between left and right prompt on the first prompt line. You can set it to ' ', '·' or
  # '─'. The last two make it easier to see the alignment between left and right prompt and to
  # separate prompt from command output. You might want to set POWERLEVEL9K_PROMPT_ADD_NEWLINE=false
  # for more compact prompt if using using this option.
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR=' '
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_BACKGROUND=
  typeset -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_GAP_BACKGROUND=
  if [[ $POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR != ' ' ]]; then
    # The color of the filler. You'll probably want to match the color of POWERLEVEL9K_MULTILINE
    # ornaments defined above.
    typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_FOREGROUND=242
    # Start filler from the edge of the screen if there are no left segments on the first line.
    typeset -g POWERLEVEL9K_EMPTY_LINE_LEFT_PROMPT_FIRST_SEGMENT_END_SYMBOL='%{%}'
    # End filler on the edge of the screen if there are no right segments on the first line.
    typeset -g POWERLEVEL9K_EMPTY_LINE_RIGHT_PROMPT_FIRST_SEGMENT_START_SYMBOL='%{%}'
  fi

  # Separator between same-color segments on the left.
  typeset -g POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR='\uE0C1'
  # Separator between same-color segments on the right.
  typeset -g POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR='\uE0C3'
  # Separator between different-color segments on the left.
  typeset -g POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR='\uE0C0'
  # Separator between different-color segments on the right.
  typeset -g POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR='\uE0C2'
  # The right end of left prompt.
  typeset -g POWERLEVEL9K_LEFT_PROMPT_LAST_SEGMENT_END_SYMBOL='\uE0C0'
  # The left end of right prompt.
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_FIRST_SEGMENT_START_SYMBOL='\uE0C2'
  # The left end of left prompt.
  typeset -g POWERLEVEL9K_LEFT_PROMPT_FIRST_SEGMENT_START_SYMBOL=''
  # The right end of right prompt.
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_LAST_SEGMENT_END_SYMBOL=''
  # Left prompt terminator for lines without any segments.
  typeset -g POWERLEVEL9K_EMPTY_LINE_LEFT_PROMPT_LAST_SEGMENT_END_SYMBOL=

  #################################[ os_icon: os identifier ]##################################
  # OS identifier color.
  typeset -g POWERLEVEL9K_OS_ICON_FOREGROUND=232
  typeset -g POWERLEVEL9K_OS_ICON_BACKGROUND=7
  # Custom icon.
  # typeset -g POWERLEVEL9K_OS_ICON_CONTENT_EXPANSION='⭐'

  ################################[ prompt_char: prompt symbol ]################################
  # Transparent background.
  typeset -g POWERLEVEL9K_PROMPT_CHAR_BACKGROUND=
  # Green prompt symbol if the last command succeeded.
  typeset -g POWERLEVEL9K_PROMPT_CHAR_OK_{VIINS,VICMD,VIVIS,VIOWR}_FOREGROUND=76
  # Red prompt symbol if the last command failed.
  typeset -g POWERLEVEL9K_PROMPT_CHAR_ERROR_{VIINS,VICMD,VIVIS,VIOWR}_FOREGROUND=196
  # Default prompt symbol.
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VIINS_CONTENT_EXPANSION='❯'
  # Prompt symbol in command vi mode.
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VICMD_CONTENT_EXPANSION='❮'
  # Prompt symbol in visual vi mode.
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VIVIS_CONTENT_EXPANSION='V'
  # Prompt symbol in overwrite vi mode.
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VIOWR_CONTENT_EXPANSION='▶'
  typeset -g POWERLEVEL9K_PROMPT_CHAR_OVERWRITE_STATE=true
  # No line terminator if prompt_char is the last segment.
  typeset -g POWERLEVEL9K_PROMPT_CHAR_LEFT_PROMPT_LAST_SEGMENT_END_SYMBOL=
  # No line introducer if prompt_char is the first segment.
  typeset -g POWERLEVEL9K_PROMPT_CHAR_LEFT_PROMPT_FIRST_SEGMENT_START_SYMBOL=
  # No surrounding whitespace.
  typeset -g POWERLEVEL9K_PROMPT_CHAR_LEFT_{LEFT,RIGHT}_WHITESPACE=

  ##################################[ dir: current directory ]##################################
  # Current directory background color.
  typeset -g POWERLEVEL9K_DIR_BACKGROUND=6
  # Default current directory foreground color.
  typeset -g POWERLEVEL9K_DIR_FOREGROUND=0
  # If directory is too long, shorten some of its segments to the shortest possible unique
  # prefix. The shortened directory can be tab-completed to the original.
  typeset -g POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_unique
  # Replace removed segment suffixes with this symbol.
  typeset -g POWERLEVEL9K_SHORTEN_DELIMITER=
  # Color of the shortened directory segments.
  typeset -g POWERLEVEL9K_DIR_SHORTENED_FOREGROUND=238
  # Color of the anchor directory segments. Anchor segments are never shortened. The first
  # segment is always an anchor.
  typeset -g POWERLEVEL9K_DIR_ANCHOR_FOREGROUND=0
  # Display anchor directory segments in bold.
  typeset -g POWERLEVEL9K_DIR_ANCHOR_BOLD=true
  # Don't shorten directories that contain any of these files. They are anchors.
  local anchor_files=(
    .bzr
    .citc
    .git
    .hg
    .node-version
    .python-version
    .go-version
    .ruby-version
    .lua-version
    .java-version
    .perl-version
    .php-version
    .tool-version
    .shorten_folder_marker
    .svn
    .terraform
    CVS
    Cargo.toml
    composer.json
    go.mod
    package.json
    stack.yaml
  )
  typeset -g POWERLEVEL9K_SHORTEN_FOLDER_MARKER=&quot;(${(j:|:)anchor_files})&quot;
  # If set to &quot;first&quot; (&quot;last&quot;), remove everything before the first (last) subdirectory that contains
  # files matching $POWERLEVEL9K_SHORTEN_FOLDER_MARKER. For example, when the current directory is
  # /foo/bar/git_repo/nested_git_repo/baz, prompt will display git_repo/nested_git_repo/baz (first)
  # or nested_git_repo/baz (last). This assumes that git_repo and nested_git_repo contain markers
  # and other directories don't.
  #
  # Optionally, &quot;first&quot; and &quot;last&quot; can be followed by &quot;:&lt;offset&gt;&quot; where &lt;offset&gt; is an integer.
  # This moves the truncation point to the right (positive offset) or to the left (negative offset)
  # relative to the marker. Plain &quot;first&quot; and &quot;last&quot; are equivalent to &quot;first:0&quot; and &quot;last:0&quot;
  # respectively.
  typeset -g POWERLEVEL9K_DIR_TRUNCATE_BEFORE_MARKER=false
  # Don't shorten this many last directory segments. They are anchors.
  typeset -g POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
  # Shorten directory if it's longer than this even if there is space for it. The value can
  # be either absolute (e.g., '80') or a percentage of terminal width (e.g, '50%'). If empty,
  # directory will be shortened only when prompt doesn't fit or when other parameters demand it
  # (see POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS and POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS_PCT below).
  # If set to `0`, directory will always be shortened to its minimum length.
  typeset -g POWERLEVEL9K_DIR_MAX_LENGTH=80
  # When `dir` segment is on the last prompt line, try to shorten it enough to leave at least this
  # many columns for typing commands.
  typeset -g POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS=40
  # When `dir` segment is on the last prompt line, try to shorten it enough to leave at least
  # COLUMNS * POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS_PCT * 0.01 columns for typing commands.
  typeset -g POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS_PCT=50
  # If set to true, embed a hyperlink into the directory. Useful for quickly
  # opening a directory in the file manager simply by clicking the link.
  # Can also be handy when the directory is shortened, as it allows you to see
  # the full directory that was used in previous commands.
  typeset -g POWERLEVEL9K_DIR_HYPERLINK=false

  # Enable special styling for non-writable directories. See POWERLEVEL9K_LOCK_ICON and
  # POWERLEVEL9K_DIR_CLASSES below.
  typeset -g POWERLEVEL9K_DIR_SHOW_WRITABLE=v2

  # The default icon shown next to non-writable directories when POWERLEVEL9K_DIR_SHOW_WRITABLE is
  # set to v2.
  # typeset -g POWERLEVEL9K_LOCK_ICON='⭐'

  # POWERLEVEL9K_DIR_CLASSES allows you to specify custom icons and colors for different
  # directories. It must be an array with 3 * N elements. Each triplet consists of:
  #
  #   1. A pattern against which the current directory ($PWD) is matched. Matching is done with
  #      extended_glob option enabled.
  #   2. Directory class for the purpose of styling.
  #   3. An empty string.
  #
  # Triplets are tried in order. The first triplet whose pattern matches $PWD wins.
  #
  # If POWERLEVEL9K_DIR_SHOW_WRITABLE is set to v2 and the current directory is not writable,
  # its class gets suffix _NOT_WRITABLE.
  #
  # For example, given these settings:
  #
  #   typeset -g POWERLEVEL9K_DIR_CLASSES=(
  #     '~/work(|/*)'  WORK     ''
  #     '~(|/*)'       HOME     ''
  #     '*'            DEFAULT  '')
  #
  # Whenever the current directory is ~/work or a subdirectory of ~/work, it gets styled with class
  # WORK or WORK_NOT_WRITABLE.
  #
  # Simply assigning classes to directories doesn't have any visible effects. It merely gives you an
  # option to define custom colors and icons for different directory classes.
  #
  #   # Styling for WORK.
  #   typeset -g POWERLEVEL9K_DIR_WORK_VISUAL_IDENTIFIER_EXPANSION='⭐'
  #   typeset -g POWERLEVEL9K_DIR_WORK_BACKGROUND=4
  #   typeset -g POWERLEVEL9K_DIR_WORK_FOREGROUND=254
  #   typeset -g POWERLEVEL9K_DIR_WORK_SHORTENED_FOREGROUND=250
  #   typeset -g POWERLEVEL9K_DIR_WORK_ANCHOR_FOREGROUND=255
  #
  #   # Styling for WORK_NOT_WRITABLE.
  #   typeset -g POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_VISUAL_IDENTIFIER_EXPANSION='⭐'
  #   typeset -g POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_BACKGROUND=4
  #   typeset -g POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_FOREGROUND=254
  #   typeset -g POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_SHORTENED_FOREGROUND=250
  #   typeset -g POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_ANCHOR_FOREGROUND=255
  #
  # If a styling parameter isn't explicitly defined for some class, it falls back to the classless
  # parameter. For example, if POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_FOREGROUND is not set, it falls
  # back to POWERLEVEL9K_DIR_FOREGROUND.
  #
  # typeset -g POWERLEVEL9K_DIR_CLASSES=()

  # Custom prefix.
  # typeset -g POWERLEVEL9K_DIR_PREFIX='in '

  #####################################[ vcs: git status ]######################################
  # Version control system colors.
  # typeset -g POWERLEVEL9K_VCS_CLEAN_BACKGROUND=2
  # typeset -g POWERLEVEL9K_VCS_MODIFIED_BACKGROUND=3
  # typeset -g POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND=2
  # typeset -g POWERLEVEL9K_VCS_CONFLICTED_BACKGROUND=3
  # typeset -g POWERLEVEL9K_VCS_LOADING_BACKGROUND=8

  # Branch icon. Set this parameter to '\uF126 ' for the popular Powerline branch icon.
  typeset -g POWERLEVEL9K_VCS_BRANCH_ICON='\uF126 '

  # Untracked files icon. It's really a question mark, your font isn't broken.
  # Change the value of this parameter to show a different icon.
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_ICON='?'

  # Formatter for Git status.
  #
  # Example output: master ⇣42⇡42 *42 merge ~42 +42 !42 ?42.
  #
  # You can edit the function to customize how Git status looks.
  #
  # VCS_STATUS_* parameters are set by gitstatus plugin. See reference:
  # https://github.com/romkatv/gitstatus/blob/master/gitstatus.plugin.zsh.
  function my_git_formatter() {
    emulate -L zsh

    if [[ -n $P9K_CONTENT ]]; then
      # If P9K_CONTENT is not empty, use it. It's either &quot;loading&quot; or from vcs_info (not from
      # gitstatus plugin). VCS_STATUS_* parameters are not available in this case.
      typeset -g my_git_format=$P9K_CONTENT
      return
    fi

    # Styling for different parts of Git status.
    local       meta='%7F' # white foreground
    local      clean='%0F' # black foreground
    local   modified='%0F' # black foreground
    local  untracked='%0F' # black foreground
    local conflicted='%1F' # red foreground

    local res
    local where  # branch or tag
    if [[ -n $VCS_STATUS_LOCAL_BRANCH ]]; then
      res+=&quot;${clean}${(g::)POWERLEVEL9K_VCS_BRANCH_ICON}&quot;
      where=${(V)VCS_STATUS_LOCAL_BRANCH}
    elif [[ -n $VCS_STATUS_TAG ]]; then
      res+=&quot;${meta}#&quot;
      where=${(V)VCS_STATUS_TAG}
    fi

    # If local branch name or tag is at most 32 characters long, show it in full.
    # Otherwise show the first 12 … the last 12.
    # Tip: To always show local branch name in full without truncation, delete the next line.
    (( $#where &gt; 32 )) &amp;&amp; where[13,-13]=&quot;…&quot;

    res+=&quot;${clean}${where//\%/%%}&quot;  # escape %

    # Display the current Git commit if there is no branch or tag.
    # Tip: To always display the current Git commit, remove `[[ -z $where ]] &amp;&amp;` from the next line.
    [[ -z $where ]] &amp;&amp; res+=&quot;${meta}@${clean}${VCS_STATUS_COMMIT[1,8]}&quot;

    # Show tracking branch name if it differs from local branch.
    if [[ -n ${VCS_STATUS_REMOTE_BRANCH:#$VCS_STATUS_LOCAL_BRANCH} ]]; then
      res+=&quot;${meta}:${clean}${(V)VCS_STATUS_REMOTE_BRANCH//\%/%%}&quot;  # escape %
    fi

    # ⇣42 if behind the remote.
    (( VCS_STATUS_COMMITS_BEHIND )) &amp;&amp; res+=&quot; ${clean}⇣${VCS_STATUS_COMMITS_BEHIND}&quot;
    # ⇡42 if ahead of the remote; no leading space if also behind the remote: ⇣42⇡42.
    (( VCS_STATUS_COMMITS_AHEAD &amp;&amp; !VCS_STATUS_COMMITS_BEHIND )) &amp;&amp; res+=&quot; &quot;
    (( VCS_STATUS_COMMITS_AHEAD  )) &amp;&amp; res+=&quot;${clean}⇡${VCS_STATUS_COMMITS_AHEAD}&quot;
    # ⇠42 if behind the push remote.
    (( VCS_STATUS_PUSH_COMMITS_BEHIND )) &amp;&amp; res+=&quot; ${clean}⇠${VCS_STATUS_PUSH_COMMITS_BEHIND}&quot;
    (( VCS_STATUS_PUSH_COMMITS_AHEAD &amp;&amp; !VCS_STATUS_PUSH_COMMITS_BEHIND )) &amp;&amp; res+=&quot; &quot;
    # ⇢42 if ahead of the push remote; no leading space if also behind: ⇠42⇢42.
    (( VCS_STATUS_PUSH_COMMITS_AHEAD  )) &amp;&amp; res+=&quot;${clean}⇢${VCS_STATUS_PUSH_COMMITS_AHEAD}&quot;
    # *42 if have stashes.
    (( VCS_STATUS_STASHES        )) &amp;&amp; res+=&quot; ${clean}*${VCS_STATUS_STASHES}&quot;
    # 'merge' if the repo is in an unusual state.
    [[ -n $VCS_STATUS_ACTION     ]] &amp;&amp; res+=&quot; ${conflicted}${VCS_STATUS_ACTION}&quot;
    # ~42 if have merge conflicts.
    (( VCS_STATUS_NUM_CONFLICTED )) &amp;&amp; res+=&quot; ${conflicted}~${VCS_STATUS_NUM_CONFLICTED}&quot;
    # +42 if have staged changes.
    (( VCS_STATUS_NUM_STAGED     )) &amp;&amp; res+=&quot; ${modified}+${VCS_STATUS_NUM_STAGED}&quot;
    # !42 if have unstaged changes.
    (( VCS_STATUS_NUM_UNSTAGED   )) &amp;&amp; res+=&quot; ${modified}!${VCS_STATUS_NUM_UNSTAGED}&quot;
    # ?42 if have untracked files. It's really a question mark, your font isn't broken.
    # See POWERLEVEL9K_VCS_UNTRACKED_ICON above if you want to use a different icon.
    # Remove the next line if you don't want to see untracked files at all.
    (( VCS_STATUS_NUM_UNTRACKED  )) &amp;&amp; res+=&quot; ${untracked}${(g::)POWERLEVEL9K_VCS_UNTRACKED_ICON}${VCS_STATUS_NUM_UNTRACKED}&quot;
    # &quot;─&quot; if the number of unstaged files is unknown. This can happen due to
    # POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY (see below) being set to a non-negative number lower
    # than the number of files in the Git index, or due to bash.showDirtyState being set to false
    # in the repository config. The number of staged and untracked files may also be unknown
    # in this case.
    (( VCS_STATUS_HAS_UNSTAGED == -1 )) &amp;&amp; res+=&quot; ${modified}─&quot;

    typeset -g my_git_format=$res
  }
  functions -M my_git_formatter 2&gt;/dev/null

  # Don't count the number of unstaged, untracked and conflicted files in Git repositories with
  # more than this many files in the index. Negative value means infinity.
  #
  # If you are working in Git repositories with tens of millions of files and seeing performance
  # sagging, try setting POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY to a number lower than the output
  # of `git ls-files | wc -l`. Alternatively, add `bash.showDirtyState = false` to the repository's
  # config: `git config bash.showDirtyState false`.
  typeset -g POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY=-1

  # Don't show Git status in prompt for repositories whose workdir matches this pattern.
  # For example, if set to '~', the Git repository at $HOME/.git will be ignored.
  # Multiple patterns can be combined with '|': '~(|/foo)|/bar/baz/*'.
  typeset -g POWERLEVEL9K_VCS_DISABLED_WORKDIR_PATTERN='~'

  # Disable the default Git status formatting.
  typeset -g POWERLEVEL9K_VCS_DISABLE_GITSTATUS_FORMATTING=true
  # Install our own Git status formatter.
  typeset -g POWERLEVEL9K_VCS_CONTENT_EXPANSION='${$((my_git_formatter()))+${my_git_format}}'
  # Enable counters for staged, unstaged, etc.
  typeset -g POWERLEVEL9K_VCS_{STAGED,UNSTAGED,UNTRACKED,CONFLICTED,COMMITS_AHEAD,COMMITS_BEHIND}_MAX_NUM=-1

  # Custom icon.
  # typeset -g POWERLEVEL9K_VCS_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # Custom prefix.
  # typeset -g POWERLEVEL9K_VCS_PREFIX='on '

  # Show status of repositories of these types. You can add svn and/or hg if you are
  # using them. If you do, your prompt may become slow even when your current directory
  # isn't in an svn or hg reposotiry.
  typeset -g POWERLEVEL9K_VCS_BACKENDS=(git)

  ##########################[ status: exit code of the last command ]###########################
  # Enable OK_PIPE, ERROR_PIPE and ERROR_SIGNAL status states to allow us to enable, disable and
  # style them independently from the regular OK and ERROR state.
  typeset -g POWERLEVEL9K_STATUS_EXTENDED_STATES=true

  # Status on success. No content, just an icon. No need to show it if prompt_char is enabled as
  # it will signify success by turning green.
  typeset -g POWERLEVEL9K_STATUS_OK=true
  typeset -g POWERLEVEL9K_STATUS_OK_VISUAL_IDENTIFIER_EXPANSION=' ✔'
  # typeset -g POWERLEVEL9K_STATUS_OK_FOREGROUND=2
  # typeset -g POWERLEVEL9K_STATUS_OK_BACKGROUND=0

  # Status when some part of a pipe command fails but the overall exit status is zero. It may look
  # like this: 1|0.
  typeset -g POWERLEVEL9K_STATUS_OK_PIPE=true
  typeset -g POWERLEVEL9K_STATUS_OK_PIPE_VISUAL_IDENTIFIER_EXPANSION=' ✔'
  # typeset -g POWERLEVEL9K_STATUS_OK_PIPE_FOREGROUND=2
  # typeset -g POWERLEVEL9K_STATUS_OK_PIPE_BACKGROUND=0

  # Status when it's just an error code (e.g., '1'). No need to show it if prompt_char is enabled as
  # it will signify error by turning red.
  typeset -g POWERLEVEL9K_STATUS_ERROR=true
  typeset -g POWERLEVEL9K_STATUS_ERROR_VISUAL_IDENTIFIER_EXPANSION='✘'
  # typeset -g POWERLEVEL9K_STATUS_ERROR_FOREGROUND=3
  # typeset -g POWERLEVEL9K_STATUS_ERROR_BACKGROUND=1

  # Status when the last command was terminated by a signal.
  typeset -g POWERLEVEL9K_STATUS_ERROR_SIGNAL=true
  # Use terse signal names: &quot;INT&quot; instead of &quot;SIGINT(2)&quot;.
  typeset -g POWERLEVEL9K_STATUS_VERBOSE_SIGNAME=false
  typeset -g POWERLEVEL9K_STATUS_ERROR_SIGNAL_VISUAL_IDENTIFIER_EXPANSION='✘'
  # typeset -g POWERLEVEL9K_STATUS_ERROR_SIGNAL_FOREGROUND=3
  # typeset -g POWERLEVEL9K_STATUS_ERROR_SIGNAL_BACKGROUND=1

  # Status when some part of a pipe command fails and the overall exit status is also non-zero.
  # It may look like this: 1|0.
  typeset -g POWERLEVEL9K_STATUS_ERROR_PIPE=true
  typeset -g POWERLEVEL9K_STATUS_ERROR_PIPE_VISUAL_IDENTIFIER_EXPANSION='✘'
  # typeset -g POWERLEVEL9K_STATUS_ERROR_PIPE_FOREGROUND=3
  # typeset -g POWERLEVEL9K_STATUS_ERROR_PIPE_BACKGROUND=1

  ###################[ command_execution_time: duration of the last command ]###################
  # Execution time color.
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=0
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND=3
  # Show duration of the last command if takes at least this many seconds.
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=3
  # Show this many fractional digits. Zero means round to seconds.
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION=0
  # Duration format: 1d 2h 3m 4s.
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FORMAT='d h m s'
  # Custom icon.
  # typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # Custom prefix.
  # typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_PREFIX='took '

  #######################[ background_jobs: presence of background jobs ]#######################
  # Background jobs color.
  # typeset -g POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND=6
  # typeset -g POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND=0
  # Don't show the number of background jobs.
  typeset -g POWERLEVEL9K_BACKGROUND_JOBS_VERBOSE=false
  # Custom icon.
  # typeset -g POWERLEVEL9K_BACKGROUND_JOBS_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #######################[ direnv: direnv status (https://direnv.net/) ]########################
  # Direnv color.
  # typeset -g POWERLEVEL9K_DIRENV_FOREGROUND=3
  # typeset -g POWERLEVEL9K_DIRENV_BACKGROUND=0
  # Custom icon.
  # typeset -g POWERLEVEL9K_DIRENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ###############[ asdf: asdf version manager (https://github.com/asdf-vm/asdf) ]###############
  # Default asdf color. Only used to display tools for which there is no color override (see below).
  # Tip:  Override these parameters for ${TOOL} with POWERLEVEL9K_ASDF_${TOOL}_FOREGROUND and
  # POWERLEVEL9K_ASDF_${TOOL}_BACKGROUND.
  typeset -g POWERLEVEL9K_ASDF_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_BACKGROUND=7

  # There are four parameters that can be used to hide asdf tools. Each parameter describes
  # conditions under which a tool gets hidden. Parameters can hide tools but not unhide them. If at
  # least one parameter decides to hide a tool, that tool gets hidden. If no parameter decides to
  # hide a tool, it gets shown.
  #
  # Special note on the difference between POWERLEVEL9K_ASDF_SOURCES and
  # POWERLEVEL9K_ASDF_PROMPT_ALWAYS_SHOW. Consider the effect of the following commands:
  #
  #   asdf local  python 3.8.1
  #   asdf global python 3.8.1
  #
  # After running both commands the current python version is 3.8.1 and its source is &quot;local&quot; as
  # it takes precedence over &quot;global&quot;. If POWERLEVEL9K_ASDF_PROMPT_ALWAYS_SHOW is set to false,
  # it'll hide python version in this case because 3.8.1 is the same as the global version.
  # POWERLEVEL9K_ASDF_SOURCES will hide python version only if the value of this parameter doesn't
  # contain &quot;local&quot;.

  # Hide tool versions that don't come from one of these sources.
  #
  # Available sources:
  #
  # - shell   `asdf current` says &quot;set by ASDF_${TOOL}_VERSION environment variable&quot;
  # - local   `asdf current` says &quot;set by /some/not/home/directory/file&quot;
  # - global  `asdf current` says &quot;set by /home/username/file&quot;
  #
  # Note: If this parameter is set to (shell local global), it won't hide tools.
  # Tip:  Override this parameter for ${TOOL} with POWERLEVEL9K_ASDF_${TOOL}_SOURCES.
  typeset -g POWERLEVEL9K_ASDF_SOURCES=(shell local global)

  # If set to false, hide tool versions that are the same as global.
  #
  # Note: The name of this parameter doesn't reflect its meaning at all.
  # Note: If this parameter is set to true, it won't hide tools.
  # Tip:  Override this parameter for ${TOOL} with POWERLEVEL9K_ASDF_${TOOL}_PROMPT_ALWAYS_SHOW.
  typeset -g POWERLEVEL9K_ASDF_PROMPT_ALWAYS_SHOW=false

  # If set to false, hide tool versions that are equal to &quot;system&quot;.
  #
  # Note: If this parameter is set to true, it won't hide tools.
  # Tip: Override this parameter for ${TOOL} with POWERLEVEL9K_ASDF_${TOOL}_SHOW_SYSTEM.
  typeset -g POWERLEVEL9K_ASDF_SHOW_SYSTEM=true

  # If set to non-empty value, hide tools unless there is a file matching the specified file pattern
  # in the current directory, or its parent directory, or its grandparent directory, and so on.
  #
  # Note: If this parameter is set to empty value, it won't hide tools.
  # Note: SHOW_ON_UPGLOB isn't specific to asdf. It works with all prompt segments.
  # Tip: Override this parameter for ${TOOL} with POWERLEVEL9K_ASDF_${TOOL}_SHOW_ON_UPGLOB.
  #
  # Example: Hide nodejs version when there is no package.json and no *.js files in the current
  # directory, in `..`, in `../..` and so on.
  #
  #   typeset -g POWERLEVEL9K_ASDF_NODEJS_SHOW_ON_UPGLOB='*.js|package.json'
  typeset -g POWERLEVEL9K_ASDF_SHOW_ON_UPGLOB=

  # Ruby version from asdf.
  typeset -g POWERLEVEL9K_ASDF_RUBY_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_RUBY_BACKGROUND=1
  # typeset -g POWERLEVEL9K_ASDF_RUBY_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_RUBY_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Python version from asdf.
  typeset -g POWERLEVEL9K_ASDF_PYTHON_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_PYTHON_BACKGROUND=4
  # typeset -g POWERLEVEL9K_ASDF_PYTHON_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_PYTHON_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Go version from asdf.
  typeset -g POWERLEVEL9K_ASDF_GOLANG_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_GOLANG_BACKGROUND=4
  # typeset -g POWERLEVEL9K_ASDF_GOLANG_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_GOLANG_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Node.js version from asdf.
  typeset -g POWERLEVEL9K_ASDF_NODEJS_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_NODEJS_BACKGROUND=2
  # typeset -g POWERLEVEL9K_ASDF_NODEJS_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_NODEJS_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Rust version from asdf.
  typeset -g POWERLEVEL9K_ASDF_RUST_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_RUST_BACKGROUND=208
  # typeset -g POWERLEVEL9K_ASDF_RUST_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_RUST_SHOW_ON_UPGLOB='*.foo|*.bar'

  # .NET Core version from asdf.
  typeset -g POWERLEVEL9K_ASDF_DOTNET_CORE_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_DOTNET_CORE_BACKGROUND=5
  # typeset -g POWERLEVEL9K_ASDF_DOTNET_CORE_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_DOTNET_CORE_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Flutter version from asdf.
  typeset -g POWERLEVEL9K_ASDF_FLUTTER_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_FLUTTER_BACKGROUND=4
  # typeset -g POWERLEVEL9K_ASDF_FLUTTER_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_FLUTTER_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Lua version from asdf.
  typeset -g POWERLEVEL9K_ASDF_LUA_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_LUA_BACKGROUND=4
  # typeset -g POWERLEVEL9K_ASDF_LUA_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_LUA_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Java version from asdf.
  typeset -g POWERLEVEL9K_ASDF_JAVA_FOREGROUND=1
  typeset -g POWERLEVEL9K_ASDF_JAVA_BACKGROUND=7
  # typeset -g POWERLEVEL9K_ASDF_JAVA_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_JAVA_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Perl version from asdf.
  typeset -g POWERLEVEL9K_ASDF_PERL_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_PERL_BACKGROUND=4
  # typeset -g POWERLEVEL9K_ASDF_PERL_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_PERL_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Erlang version from asdf.
  typeset -g POWERLEVEL9K_ASDF_ERLANG_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_ERLANG_BACKGROUND=1
  # typeset -g POWERLEVEL9K_ASDF_ERLANG_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_ERLANG_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Elixir version from asdf.
  typeset -g POWERLEVEL9K_ASDF_ELIXIR_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_ELIXIR_BACKGROUND=5
  # typeset -g POWERLEVEL9K_ASDF_ELIXIR_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_ELIXIR_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Postgres version from asdf.
  typeset -g POWERLEVEL9K_ASDF_POSTGRES_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_POSTGRES_BACKGROUND=6
  # typeset -g POWERLEVEL9K_ASDF_POSTGRES_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_POSTGRES_SHOW_ON_UPGLOB='*.foo|*.bar'

  # PHP version from asdf.
  typeset -g POWERLEVEL9K_ASDF_PHP_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_PHP_BACKGROUND=5
  # typeset -g POWERLEVEL9K_ASDF_PHP_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_PHP_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Haskell version from asdf.
  typeset -g POWERLEVEL9K_ASDF_HASKELL_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_HASKELL_BACKGROUND=3
  # typeset -g POWERLEVEL9K_ASDF_HASKELL_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_HASKELL_SHOW_ON_UPGLOB='*.foo|*.bar'

  # Julia version from asdf.
  typeset -g POWERLEVEL9K_ASDF_JULIA_FOREGROUND=0
  typeset -g POWERLEVEL9K_ASDF_JULIA_BACKGROUND=2
  # typeset -g POWERLEVEL9K_ASDF_JULIA_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # typeset -g POWERLEVEL9K_ASDF_JULIA_SHOW_ON_UPGLOB='*.foo|*.bar'

  ##########[ nordvpn: nordvpn connection status, linux only (https://nordvpn.com/) ]###########
  # NordVPN connection indicator color.
  # typeset -g POWERLEVEL9K_NORDVPN_FOREGROUND=7
  # typeset -g POWERLEVEL9K_NORDVPN_BACKGROUND=4
  # Hide NordVPN connection indicator when not connected.
  typeset -g POWERLEVEL9K_NORDVPN_{DISCONNECTED,CONNECTING,DISCONNECTING}_CONTENT_EXPANSION=
  typeset -g POWERLEVEL9K_NORDVPN_{DISCONNECTED,CONNECTING,DISCONNECTING}_VISUAL_IDENTIFIER_EXPANSION=
  # Custom icon.
  # typeset -g POWERLEVEL9K_NORDVPN_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #################[ ranger: ranger shell (https://github.com/ranger/ranger) ]##################
  # Ranger shell color.
  # typeset -g POWERLEVEL9K_RANGER_FOREGROUND=3
  # typeset -g POWERLEVEL9K_RANGER_BACKGROUND=0
  # Custom icon.
  # typeset -g POWERLEVEL9K_RANGER_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ######################[ nnn: nnn shell (https://github.com/jarun/nnn) ]#######################
  # Nnn shell color.
  # typeset -g POWERLEVEL9K_NNN_FOREGROUND=0
  # typeset -g POWERLEVEL9K_NNN_BACKGROUND=6
  # Custom icon.
  # typeset -g POWERLEVEL9K_NNN_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ###########################[ vim_shell: vim shell indicator (:sh) ]###########################
  # Vim shell indicator color.
  # typeset -g POWERLEVEL9K_VIM_SHELL_FOREGROUND=0
  # typeset -g POWERLEVEL9K_VIM_SHELL_BACKGROUND=2
  # Custom icon.
  # typeset -g POWERLEVEL9K_VIM_SHELL_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ######[ midnight_commander: midnight commander shell (https://midnight-commander.org/) ]######
  # Midnight Commander shell color.
  # typeset -g POWERLEVEL9K_MIDNIGHT_COMMANDER_FOREGROUND=3
  # typeset -g POWERLEVEL9K_MIDNIGHT_COMMANDER_BACKGROUND=0
  # Custom icon.
  # typeset -g POWERLEVEL9K_MIDNIGHT_COMMANDER_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #[ nix_shell: nix shell (https://nixos.org/nixos/nix-pills/developing-with-nix-shell.html) ]##
  # Nix shell color.
  # typeset -g POWERLEVEL9K_NIX_SHELL_FOREGROUND=0
  # typeset -g POWERLEVEL9K_NIX_SHELL_BACKGROUND=4

  # Tip: If you want to see just the icon without &quot;pure&quot; and &quot;impure&quot;, uncomment the next line.
  # typeset -g POWERLEVEL9K_NIX_SHELL_CONTENT_EXPANSION=

  # Custom icon.
  # typeset -g POWERLEVEL9K_NIX_SHELL_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##################################[ disk_usage: disk usage ]##################################
  # Colors for different levels of disk usage.
  # typeset -g POWERLEVEL9K_DISK_USAGE_NORMAL_FOREGROUND=3
  # typeset -g POWERLEVEL9K_DISK_USAGE_NORMAL_BACKGROUND=0
  # typeset -g POWERLEVEL9K_DISK_USAGE_WARNING_FOREGROUND=0
  # typeset -g POWERLEVEL9K_DISK_USAGE_WARNING_BACKGROUND=3
  # typeset -g POWERLEVEL9K_DISK_USAGE_CRITICAL_FOREGROUND=7
  # typeset -g POWERLEVEL9K_DISK_USAGE_CRITICAL_BACKGROUND=1
  # Thresholds for different levels of disk usage (percentage points).
  typeset -g POWERLEVEL9K_DISK_USAGE_WARNING_LEVEL=90
  typeset -g POWERLEVEL9K_DISK_USAGE_CRITICAL_LEVEL=95
  # If set to true, hide disk usage when below $POWERLEVEL9K_DISK_USAGE_WARNING_LEVEL percent.
  typeset -g POWERLEVEL9K_DISK_USAGE_ONLY_WARNING=false
  # Custom icon.
  # typeset -g POWERLEVEL9K_DISK_USAGE_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ###########[ vi_mode: vi mode (you don't need this if you've enabled prompt_char) ]###########
  # Foreground color.
  typeset -g POWERLEVEL9K_VI_MODE_FOREGROUND=0
  # Text and color for normal (a.k.a. command) vi mode.
  typeset -g POWERLEVEL9K_VI_COMMAND_MODE_STRING=NORMAL
  typeset -g POWERLEVEL9K_VI_MODE_NORMAL_BACKGROUND=2
  # Text and color for visual vi mode.
  typeset -g POWERLEVEL9K_VI_VISUAL_MODE_STRING=VISUAL
  typeset -g POWERLEVEL9K_VI_MODE_VISUAL_BACKGROUND=4
  # Text and color for overtype (a.k.a. overwrite and replace) vi mode.
  typeset -g POWERLEVEL9K_VI_OVERWRITE_MODE_STRING=OVERTYPE
  typeset -g POWERLEVEL9K_VI_MODE_OVERWRITE_BACKGROUND=3
  # Text and color for insert vi mode.
  typeset -g POWERLEVEL9K_VI_INSERT_MODE_STRING=
  typeset -g POWERLEVEL9K_VI_MODE_INSERT_FOREGROUND=8

  ######################################[ ram: free RAM ]#######################################
  # RAM color.
  # typeset -g POWERLEVEL9K_RAM_FOREGROUND=0
  # typeset -g POWERLEVEL9K_RAM_BACKGROUND=3
  # Custom icon.
  # typeset -g POWERLEVEL9K_RAM_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #####################################[ swap: used swap ]######################################
  # Swap color.
  # typeset -g POWERLEVEL9K_SWAP_FOREGROUND=0
  # typeset -g POWERLEVEL9K_SWAP_BACKGROUND=3
  # Custom icon.
  # typeset -g POWERLEVEL9K_SWAP_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ######################################[ load: CPU load ]######################################
  # Show average CPU load over this many last minutes. Valid values are 1, 5 and 15.
  typeset -g POWERLEVEL9K_LOAD_WHICH=5
  # Load color when load is under 50%.
  # typeset -g POWERLEVEL9K_LOAD_NORMAL_FOREGROUND=0
  # typeset -g POWERLEVEL9K_LOAD_NORMAL_BACKGROUND=2
  # Load color when load is between 50% and 70%.
  # typeset -g POWERLEVEL9K_LOAD_WARNING_FOREGROUND=0
  # typeset -g POWERLEVEL9K_LOAD_WARNING_BACKGROUND=3
  # Load color when load is over 70%.
  # typeset -g POWERLEVEL9K_LOAD_CRITICAL_FOREGROUND=0
  # typeset -g POWERLEVEL9K_LOAD_CRITICAL_BACKGROUND=1
  # Custom icon.
  # typeset -g POWERLEVEL9K_LOAD_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ################[ todo: todo items (https://github.com/todotxt/todo.txt-cli) ]################
  # Todo color.
  # typeset -g POWERLEVEL9K_TODO_FOREGROUND=0
  # typeset -g POWERLEVEL9K_TODO_BACKGROUND=8
  # Hide todo when the total number of tasks is zero.
  typeset -g POWERLEVEL9K_TODO_HIDE_ZERO_TOTAL=true
  # Hide todo when the number of tasks after filtering is zero.
  typeset -g POWERLEVEL9K_TODO_HIDE_ZERO_FILTERED=false

  # Todo format. The following parameters are available within the expansion.
  #
  # - P9K_TODO_TOTAL_TASK_COUNT     The total number of tasks.
  # - P9K_TODO_FILTERED_TASK_COUNT  The number of tasks after filtering.
  #
  # These variables correspond to the last line of the output of `todo.sh -p ls`:
  #
  #   TODO: 24 of 42 tasks shown
  #
  # Here 24 is P9K_TODO_FILTERED_TASK_COUNT and 42 is P9K_TODO_TOTAL_TASK_COUNT.
  #
  # typeset -g POWERLEVEL9K_TODO_CONTENT_EXPANSION='$P9K_TODO_FILTERED_TASK_COUNT'

  # Custom icon.
  # typeset -g POWERLEVEL9K_TODO_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ###########[ timewarrior: timewarrior tracking status (https://timewarrior.net/) ]############
  # Timewarrior color.
  # typeset -g POWERLEVEL9K_TIMEWARRIOR_FOREGROUND=255
  # typeset -g POWERLEVEL9K_TIMEWARRIOR_BACKGROUND=8

  # If the tracked task is longer than 24 characters, truncate and append &quot;…&quot;.
  # Tip: To always display tasks without truncation, delete the following parameter.
  # Tip: To hide task names and display just the icon when time tracking is enabled, set the
  # value of the following parameter to &quot;&quot;.
  typeset -g POWERLEVEL9K_TIMEWARRIOR_CONTENT_EXPANSION='${P9K_CONTENT:0:24}${${P9K_CONTENT:24}:+…}'

  # Custom icon.
  # typeset -g POWERLEVEL9K_TIMEWARRIOR_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##############[ taskwarrior: taskwarrior task count (https://taskwarrior.org/) ]##############
  # Taskwarrior color.
  # typeset -g POWERLEVEL9K_TASKWARRIOR_FOREGROUND=0
  # typeset -g POWERLEVEL9K_TASKWARRIOR_BACKGROUND=6

  # Taskwarrior segment format. The following parameters are available within the expansion.
  #
  # - P9K_TASKWARRIOR_PENDING_COUNT   The number of pending tasks: `task +PENDING count`.
  # - P9K_TASKWARRIOR_OVERDUE_COUNT   The number of overdue tasks: `task +OVERDUE count`.
  #
  # Zero values are represented as empty parameters.
  #
  # The default format:
  #
  #   '${P9K_TASKWARRIOR_OVERDUE_COUNT:+&quot;!$P9K_TASKWARRIOR_OVERDUE_COUNT/&quot;}$P9K_TASKWARRIOR_PENDING_COUNT'
  #
  # typeset -g POWERLEVEL9K_TASKWARRIOR_CONTENT_EXPANSION='$P9K_TASKWARRIOR_PENDING_COUNT'

  # Custom icon.
  # typeset -g POWERLEVEL9K_TASKWARRIOR_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##################################[ context: user@hostname ]##################################
  # Context color when running with privileges.
  typeset -g POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND=1
  typeset -g POWERLEVEL9K_CONTEXT_ROOT_BACKGROUND=0
  # Context color in SSH without privileges.
  typeset -g POWERLEVEL9K_CONTEXT_{REMOTE,REMOTE_SUDO}_FOREGROUND=3
  typeset -g POWERLEVEL9K_CONTEXT_{REMOTE,REMOTE_SUDO}_BACKGROUND=0
  # Default context color (no privileges, no SSH).
  typeset -g POWERLEVEL9K_CONTEXT_FOREGROUND=3
  typeset -g POWERLEVEL9K_CONTEXT_BACKGROUND=0

  # Context format when running with privileges: user@hostname.
  typeset -g POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE='%n@%m'
  # Context format when in SSH without privileges: user@hostname.
  typeset -g POWERLEVEL9K_CONTEXT_{REMOTE,REMOTE_SUDO}_TEMPLATE='%n@%m'
  # Default context format (no privileges, no SSH): user@hostname.
  typeset -g POWERLEVEL9K_CONTEXT_TEMPLATE='%n@%m'

  # Don't show context unless running with privileges or in SSH.
  # Tip: Remove the next line to always show context.
  typeset -g POWERLEVEL9K_CONTEXT_{DEFAULT,SUDO}_{CONTENT,VISUAL_IDENTIFIER}_EXPANSION=

  # Custom icon.
  # typeset -g POWERLEVEL9K_CONTEXT_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # Custom prefix.
  # typeset -g POWERLEVEL9K_CONTEXT_PREFIX='with '

  ###[ virtualenv: python virtual environment (https://docs.python.org/3/library/venv.html) ]###
  # Python virtual environment color.
  # typeset -g POWERLEVEL9K_VIRTUALENV_FOREGROUND=0
  # typeset -g POWERLEVEL9K_VIRTUALENV_BACKGROUND=4
  # Don't show Python version next to the virtual environment name.
  typeset -g POWERLEVEL9K_VIRTUALENV_SHOW_PYTHON_VERSION=false
  # If set to &quot;false&quot;, won't show virtualenv if pyenv is already shown.
  # If set to &quot;if-different&quot;, won't show virtualenv if it's the same as pyenv.
  typeset -g POWERLEVEL9K_VIRTUALENV_SHOW_WITH_PYENV=false
  # Separate environment name from Python version only with a space.
  typeset -g POWERLEVEL9K_VIRTUALENV_{LEFT,RIGHT}_DELIMITER=
  # Custom icon.
  # typeset -g POWERLEVEL9K_VIRTUALENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #####################[ anaconda: conda environment (https://conda.io/) ]######################
  # Anaconda environment color.
  # typeset -g POWERLEVEL9K_ANACONDA_FOREGROUND=0
  # typeset -g POWERLEVEL9K_ANACONDA_BACKGROUND=4

  # Anaconda segment format. The following parameters are available within the expansion.
  #
  # - CONDA_PREFIX                 Absolute path to the active Anaconda/Miniconda environment.
  # - CONDA_DEFAULT_ENV            Name of the active Anaconda/Miniconda environment.
  # - CONDA_PROMPT_MODIFIER        Configurable prompt modifier (see below).
  # - P9K_ANACONDA_PYTHON_VERSION  Current python version (python --version).
  #
  # CONDA_PROMPT_MODIFIER can be configured with the following command:
  #
  #   conda config --set env_prompt '({default_env}) '
  #
  # The last argument is a Python format string that can use the following variables:
  #
  # - prefix       The same as CONDA_PREFIX.
  # - default_env  The same as CONDA_DEFAULT_ENV.
  # - name         The last segment of CONDA_PREFIX.
  # - stacked_env  Comma-separated list of names in the environment stack. The first element is
  #                always the same as default_env.
  #
  # Note: '({default_env}) ' is the default value of env_prompt.
  #
  # The default value of POWERLEVEL9K_ANACONDA_CONTENT_EXPANSION expands to $CONDA_PROMPT_MODIFIER
  # without the surrounding parentheses, or to the last path component of CONDA_PREFIX if the former
  # is empty.
  typeset -g POWERLEVEL9K_ANACONDA_CONTENT_EXPANSION='${${${${CONDA_PROMPT_MODIFIER#\(}% }%\)}:-${CONDA_PREFIX:t}}'

  # Custom icon.
  # typeset -g POWERLEVEL9K_ANACONDA_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ################[ pyenv: python environment (https://github.com/pyenv/pyenv) ]################
  # Pyenv color.
  # typeset -g POWERLEVEL9K_PYENV_FOREGROUND=0
  # typeset -g POWERLEVEL9K_PYENV_BACKGROUND=4
  # Hide python version if it doesn't come from one of these sources.
  typeset -g POWERLEVEL9K_PYENV_SOURCES=(shell local global)
  # If set to false, hide python version if it's the same as global:
  # $(pyenv version-name) == $(pyenv global).
  typeset -g POWERLEVEL9K_PYENV_PROMPT_ALWAYS_SHOW=false
  # If set to false, hide python version if it's equal to &quot;system&quot;.
  typeset -g POWERLEVEL9K_PYENV_SHOW_SYSTEM=true

  # Pyenv segment format. The following parameters are available within the expansion.
  #
  # - P9K_CONTENT                Current pyenv environment (pyenv version-name).
  # - P9K_PYENV_PYTHON_VERSION   Current python version (python --version).
  #
  # The default format has the following logic:
  #
  # 1. Display &quot;$P9K_CONTENT $P9K_PYENV_PYTHON_VERSION&quot; if $P9K_PYENV_PYTHON_VERSION is not
  #   empty and unequal to $P9K_CONTENT.
  # 2. Otherwise display just &quot;$P9K_CONTENT&quot;.
  typeset -g POWERLEVEL9K_PYENV_CONTENT_EXPANSION='${P9K_CONTENT}${${P9K_PYENV_PYTHON_VERSION:#$P9K_CONTENT}:+ $P9K_PYENV_PYTHON_VERSION}'

  # Custom icon.
  # typeset -g POWERLEVEL9K_PYENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ################[ goenv: go environment (https://github.com/syndbg/goenv) ]################
  # Goenv color.
  # typeset -g POWERLEVEL9K_GOENV_FOREGROUND=0
  # typeset -g POWERLEVEL9K_GOENV_BACKGROUND=4
  # Hide go version if it doesn't come from one of these sources.
  typeset -g POWERLEVEL9K_GOENV_SOURCES=(shell local global)
  # If set to false, hide go version if it's the same as global:
  # $(goenv version-name) == $(goenv global).
  typeset -g POWERLEVEL9K_GOENV_PROMPT_ALWAYS_SHOW=false
  # If set to false, hide go version if it's equal to &quot;system&quot;.
  typeset -g POWERLEVEL9K_GOENV_SHOW_SYSTEM=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_GOENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##########[ nodenv: node.js version from nodenv (https://github.com/nodenv/nodenv) ]##########
  # Nodenv color.
  # typeset -g POWERLEVEL9K_NODENV_FOREGROUND=2
  # typeset -g POWERLEVEL9K_NODENV_BACKGROUND=0
  # Hide node version if it doesn't come from one of these sources.
  typeset -g POWERLEVEL9K_NODENV_SOURCES=(shell local global)
  # If set to false, hide node version if it's the same as global:
  # $(nodenv version-name) == $(nodenv global).
  typeset -g POWERLEVEL9K_NODENV_PROMPT_ALWAYS_SHOW=false
  # If set to false, hide node version if it's equal to &quot;system&quot;.
  typeset -g POWERLEVEL9K_NODENV_SHOW_SYSTEM=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_NODENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##############[ nvm: node.js version from nvm (https://github.com/nvm-sh/nvm) ]###############
  # Nvm color.
  # typeset -g POWERLEVEL9K_NVM_FOREGROUND=0
  # typeset -g POWERLEVEL9K_NVM_BACKGROUND=5
  # Custom icon.
  # typeset -g POWERLEVEL9K_NVM_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ############[ nodeenv: node.js environment (https://github.com/ekalinin/nodeenv) ]############
  # Nodeenv color.
  # typeset -g POWERLEVEL9K_NODEENV_FOREGROUND=2
  # typeset -g POWERLEVEL9K_NODEENV_BACKGROUND=0
  # Don't show Node version next to the environment name.
  typeset -g POWERLEVEL9K_NODEENV_SHOW_NODE_VERSION=false
  # Separate environment name from Node version only with a space.
  typeset -g POWERLEVEL9K_NODEENV_{LEFT,RIGHT}_DELIMITER=
  # Custom icon.
  # typeset -g POWERLEVEL9K_NODEENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##############################[ node_version: node.js version ]###############################
  # Node version color.
  # typeset -g POWERLEVEL9K_NODE_VERSION_FOREGROUND=7
  # typeset -g POWERLEVEL9K_NODE_VERSION_BACKGROUND=2
  # Show node version only when in a directory tree containing package.json.
  typeset -g POWERLEVEL9K_NODE_VERSION_PROJECT_ONLY=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_NODE_VERSION_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #######################[ go_version: go version (https://golang.org) ]########################
  # Go version color.
  # typeset -g POWERLEVEL9K_GO_VERSION_FOREGROUND=255
  # typeset -g POWERLEVEL9K_GO_VERSION_BACKGROUND=2
  # Show go version only when in a go project subdirectory.
  typeset -g POWERLEVEL9K_GO_VERSION_PROJECT_ONLY=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_GO_VERSION_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #################[ rust_version: rustc version (https://www.rust-lang.org) ]##################
  # Rust version color.
  # typeset -g POWERLEVEL9K_RUST_VERSION_FOREGROUND=0
  # typeset -g POWERLEVEL9K_RUST_VERSION_BACKGROUND=208
  # Show rust version only when in a rust project subdirectory.
  typeset -g POWERLEVEL9K_RUST_VERSION_PROJECT_ONLY=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_RUST_VERSION_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ###############[ dotnet_version: .NET version (https://dotnet.microsoft.com) ]################
  # .NET version color.
  # typeset -g POWERLEVEL9K_DOTNET_VERSION_FOREGROUND=7
  # typeset -g POWERLEVEL9K_DOTNET_VERSION_BACKGROUND=5
  # Show .NET version only when in a .NET project subdirectory.
  typeset -g POWERLEVEL9K_DOTNET_VERSION_PROJECT_ONLY=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_DOTNET_VERSION_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #####################[ php_version: php version (https://www.php.net/) ]######################
  # PHP version color.
  typeset -g POWERLEVEL9K_PHP_VERSION_FOREGROUND=0
  typeset -g POWERLEVEL9K_PHP_VERSION_BACKGROUND=5
  # Show PHP version only when in a PHP project subdirectory.
  typeset -g POWERLEVEL9K_PHP_VERSION_PROJECT_ONLY=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_PHP_VERSION_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##########[ laravel_version: laravel php framework version (https://laravel.com/) ]###########
  # Laravel version color.
  typeset -g POWERLEVEL9K_LARAVEL_VERSION_FOREGROUND=1
  typeset -g POWERLEVEL9K_LARAVEL_VERSION_BACKGROUND=7
  # Custom icon.
  # typeset -g POWERLEVEL9K_LARAVEL_VERSION_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #############[ rbenv: ruby version from rbenv (https://github.com/rbenv/rbenv) ]##############
  # Rbenv color.
  # typeset -g POWERLEVEL9K_RBENV_FOREGROUND=0
  # typeset -g POWERLEVEL9K_RBENV_BACKGROUND=1
  # Hide ruby version if it doesn't come from one of these sources.
  typeset -g POWERLEVEL9K_RBENV_SOURCES=(shell local global)
  # If set to false, hide ruby version if it's the same as global:
  # $(rbenv version-name) == $(rbenv global).
  typeset -g POWERLEVEL9K_RBENV_PROMPT_ALWAYS_SHOW=false
  # If set to false, hide ruby version if it's equal to &quot;system&quot;.
  typeset -g POWERLEVEL9K_RBENV_SHOW_SYSTEM=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_RBENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ####################[ java_version: java version (https://www.java.com/) ]####################
  # Java version color.
  typeset -g POWERLEVEL9K_JAVA_VERSION_FOREGROUND=1
  typeset -g POWERLEVEL9K_JAVA_VERSION_BACKGROUND=7
  # Show java version only when in a java project subdirectory.
  typeset -g POWERLEVEL9K_JAVA_VERSION_PROJECT_ONLY=true
  # Show brief version.
  typeset -g POWERLEVEL9K_JAVA_VERSION_FULL=false
  # Custom icon.
  # typeset -g POWERLEVEL9K_JAVA_VERSION_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ###[ package: name@version from package.json (https://docs.npmjs.com/files/package.json) ]####
  # Package color.
  # typeset -g POWERLEVEL9K_PACKAGE_FOREGROUND=0
  # typeset -g POWERLEVEL9K_PACKAGE_BACKGROUND=6

  # Package format. The following parameters are available within the expansion.
  #
  # - P9K_PACKAGE_NAME     The value of `name` field in package.json.
  # - P9K_PACKAGE_VERSION  The value of `version` field in package.json.
  #
  # typeset -g POWERLEVEL9K_PACKAGE_CONTENT_EXPANSION='${P9K_PACKAGE_NAME//\%/%%}@${P9K_PACKAGE_VERSION//\%/%%}'

  # Custom icon.
  # typeset -g POWERLEVEL9K_PACKAGE_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #######################[ rvm: ruby version from rvm (https://rvm.io) ]########################
  # Rvm color.
  # typeset -g POWERLEVEL9K_RVM_FOREGROUND=0
  # typeset -g POWERLEVEL9K_RVM_BACKGROUND=240
  # Don't show @gemset at the end.
  typeset -g POWERLEVEL9K_RVM_SHOW_GEMSET=false
  # Don't show ruby- at the front.
  typeset -g POWERLEVEL9K_RVM_SHOW_PREFIX=false
  # Custom icon.
  # typeset -g POWERLEVEL9K_RVM_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ###########[ fvm: flutter version management (https://github.com/leoafarias/fvm) ]############
  # Fvm color.
  # typeset -g POWERLEVEL9K_FVM_FOREGROUND=0
  # typeset -g POWERLEVEL9K_FVM_BACKGROUND=4
  # Custom icon.
  # typeset -g POWERLEVEL9K_FVM_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##########[ luaenv: lua version from luaenv (https://github.com/cehoffman/luaenv) ]###########
  # Lua color.
  # typeset -g POWERLEVEL9K_LUAENV_FOREGROUND=0
  # typeset -g POWERLEVEL9K_LUAENV_BACKGROUND=4
  # Hide lua version if it doesn't come from one of these sources.
  typeset -g POWERLEVEL9K_LUAENV_SOURCES=(shell local global)
  # If set to false, hide lua version if it's the same as global:
  # $(luaenv version-name) == $(luaenv global).
  typeset -g POWERLEVEL9K_LUAENV_PROMPT_ALWAYS_SHOW=false
  # If set to false, hide lua version if it's equal to &quot;system&quot;.
  typeset -g POWERLEVEL9K_LUAENV_SHOW_SYSTEM=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_LUAENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ###############[ jenv: java version from jenv (https://github.com/jenv/jenv) ]################
  # Java color.
  # typeset -g POWERLEVEL9K_JENV_FOREGROUND=1
  # typeset -g POWERLEVEL9K_JENV_BACKGROUND=7
  # Hide java version if it doesn't come from one of these sources.
  typeset -g POWERLEVEL9K_JENV_SOURCES=(shell local global)
  # If set to false, hide java version if it's the same as global:
  # $(jenv version-name) == $(jenv global).
  typeset -g POWERLEVEL9K_JENV_PROMPT_ALWAYS_SHOW=false
  # If set to false, hide java version if it's equal to &quot;system&quot;.
  typeset -g POWERLEVEL9K_JENV_SHOW_SYSTEM=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_JENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ###########[ plenv: perl version from plenv (https://github.com/tokuhirom/plenv) ]############
  # Perl color.
  # typeset -g POWERLEVEL9K_PLENV_FOREGROUND=0
  # typeset -g POWERLEVEL9K_PLENV_BACKGROUND=4
  # Hide perl version if it doesn't come from one of these sources.
  typeset -g POWERLEVEL9K_PLENV_SOURCES=(shell local global)
  # If set to false, hide perl version if it's the same as global:
  # $(plenv version-name) == $(plenv global).
  typeset -g POWERLEVEL9K_PLENV_PROMPT_ALWAYS_SHOW=false
  # If set to false, hide perl version if it's equal to &quot;system&quot;.
  typeset -g POWERLEVEL9K_PLENV_SHOW_SYSTEM=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_PLENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ############[ phpenv: php version from phpenv (https://github.com/phpenv/phpenv) ]############
  # PHP color.
  # typeset -g POWERLEVEL9K_PHPENV_FOREGROUND=0
  # typeset -g POWERLEVEL9K_PHPENV_BACKGROUND=5
  # Hide php version if it doesn't come from one of these sources.
  typeset -g POWERLEVEL9K_PHPENV_SOURCES=(shell local global)
  # If set to false, hide php version if it's the same as global:
  # $(phpenv version-name) == $(phpenv global).
  typeset -g POWERLEVEL9K_PHPENV_PROMPT_ALWAYS_SHOW=false
  # If set to false, hide PHP version if it's equal to &quot;system&quot;.
  typeset -g POWERLEVEL9K_PHPENV_SHOW_SYSTEM=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_PHPENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #######[ scalaenv: scala version from scalaenv (https://github.com/scalaenv/scalaenv) ]#######
  # Scala color.
  # typeset -g POWERLEVEL9K_SCALAENV_FOREGROUND=0
  # typeset -g POWERLEVEL9K_SCALAENV_BACKGROUND=1
  # Hide scala version if it doesn't come from one of these sources.
  typeset -g POWERLEVEL9K_SCALAENV_SOURCES=(shell local global)
  # If set to false, hide scala version if it's the same as global:
  # $(scalaenv version-name) == $(scalaenv global).
  typeset -g POWERLEVEL9K_SCALAENV_PROMPT_ALWAYS_SHOW=false
  # If set to false, hide scala version if it's equal to &quot;system&quot;.
  typeset -g POWERLEVEL9K_SCALAENV_SHOW_SYSTEM=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_SCALAENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##########[ haskell_stack: haskell version from stack (https://haskellstack.org/) ]###########
  # Haskell color.
  # typeset -g POWERLEVEL9K_HASKELL_STACK_FOREGROUND=0
  # typeset -g POWERLEVEL9K_HASKELL_STACK_BACKGROUND=3

  # Hide haskell version if it doesn't come from one of these sources.
  #
  #   shell:  version is set by STACK_YAML
  #   local:  version is set by stack.yaml up the directory tree
  #   global: version is set by the implicit global project (~/.stack/global-project/stack.yaml)
  typeset -g POWERLEVEL9K_HASKELL_STACK_SOURCES=(shell local)
  # If set to false, hide haskell version if it's the same as in the implicit global project.
  typeset -g POWERLEVEL9K_HASKELL_STACK_ALWAYS_SHOW=true
  # Custom icon.
  # typeset -g POWERLEVEL9K_HASKELL_STACK_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ################[ terraform: terraform workspace (https://www.terraform.io) ]#################
  # Don't show terraform workspace if it's literally &quot;default&quot;.
  typeset -g POWERLEVEL9K_TERRAFORM_SHOW_DEFAULT=false
  # POWERLEVEL9K_TERRAFORM_CLASSES is an array with even number of elements. The first element
  # in each pair defines a pattern against which the current terraform workspace gets matched.
  # More specifically, it's P9K_CONTENT prior to the application of context expansion (see below)
  # that gets matched. If you unset all POWERLEVEL9K_TERRAFORM_*CONTENT_EXPANSION parameters,
  # you'll see this value in your prompt. The second element of each pair in
  # POWERLEVEL9K_TERRAFORM_CLASSES defines the workspace class. Patterns are tried in order. The
  # first match wins.
  #
  # For example, given these settings:
  #
  #   typeset -g POWERLEVEL9K_TERRAFORM_CLASSES=(
  #     '*prod*'  PROD
  #     '*test*'  TEST
  #     '*'       OTHER)
  #
  # If your current terraform workspace is &quot;project_test&quot;, its class is TEST because &quot;project_test&quot;
  # doesn't match the pattern '*prod*' but does match '*test*'.
  #
  # You can define different colors, icons and content expansions for different classes:
  #
  #   typeset -g POWERLEVEL9K_TERRAFORM_TEST_FOREGROUND=2
  #   typeset -g POWERLEVEL9K_TERRAFORM_TEST_BACKGROUND=0
  #   typeset -g POWERLEVEL9K_TERRAFORM_TEST_VISUAL_IDENTIFIER_EXPANSION='⭐'
  #   typeset -g POWERLEVEL9K_TERRAFORM_TEST_CONTENT_EXPANSION='&gt; ${P9K_CONTENT} &lt;'
  typeset -g POWERLEVEL9K_TERRAFORM_CLASSES=(
      # '*prod*'  PROD    # These values are examples that are unlikely
      # '*test*'  TEST    # to match your needs. Customize them as needed.
      '*'         OTHER)
  typeset -g POWERLEVEL9K_TERRAFORM_OTHER_FOREGROUND=4
  typeset -g POWERLEVEL9K_TERRAFORM_OTHER_BACKGROUND=0
  # typeset -g POWERLEVEL9K_TERRAFORM_OTHER_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #############[ kubecontext: current kubernetes context (https://kubernetes.io/) ]#############
  # Show kubecontext only when the the command you are typing invokes one of these tools.
  # Tip: Remove the next line to always show kubecontext.
  typeset -g POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND='kubectl|helm|kubens|kubectx|oc|istioctl|kogito|k9s|helmfile'

  # Kubernetes context classes for the purpose of using different colors, icons and expansions with
  # different contexts.
  #
  # POWERLEVEL9K_KUBECONTEXT_CLASSES is an array with even number of elements. The first element
  # in each pair defines a pattern against which the current kubernetes context gets matched.
  # More specifically, it's P9K_CONTENT prior to the application of context expansion (see below)
  # that gets matched. If you unset all POWERLEVEL9K_KUBECONTEXT_*CONTENT_EXPANSION parameters,
  # you'll see this value in your prompt. The second element of each pair in
  # POWERLEVEL9K_KUBECONTEXT_CLASSES defines the context class. Patterns are tried in order. The
  # first match wins.
  #
  # For example, given these settings:
  #
  #   typeset -g POWERLEVEL9K_KUBECONTEXT_CLASSES=(
  #     '*prod*'  PROD
  #     '*test*'  TEST
  #     '*'       DEFAULT)
  #
  # If your current kubernetes context is &quot;deathray-testing/default&quot;, its class is TEST
  # because &quot;deathray-testing/default&quot; doesn't match the pattern '*prod*' but does match '*test*'.
  #
  # You can define different colors, icons and content expansions for different classes:
  #
  #   typeset -g POWERLEVEL9K_KUBECONTEXT_TEST_FOREGROUND=0
  #   typeset -g POWERLEVEL9K_KUBECONTEXT_TEST_BACKGROUND=2
  #   typeset -g POWERLEVEL9K_KUBECONTEXT_TEST_VISUAL_IDENTIFIER_EXPANSION='⭐'
  #   typeset -g POWERLEVEL9K_KUBECONTEXT_TEST_CONTENT_EXPANSION='&gt; ${P9K_CONTENT} &lt;'
  typeset -g POWERLEVEL9K_KUBECONTEXT_CLASSES=(
      # '*prod*'  PROD    # These values are examples that are unlikely
      # '*test*'  TEST    # to match your needs. Customize them as needed.
      '*'       DEFAULT)
  typeset -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_FOREGROUND=7
  typeset -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_BACKGROUND=5
  # typeset -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_VISUAL_IDENTIFIER_EXPANSION='⭐'

  # Use POWERLEVEL9K_KUBECONTEXT_CONTENT_EXPANSION to specify the content displayed by kubecontext
  # segment. Parameter expansions are very flexible and fast, too. See reference:
  # http://zsh.sourceforge.net/Doc/Release/Expansion.html#Parameter-Expansion.
  #
  # Within the expansion the following parameters are always available:
  #
  # - P9K_CONTENT                The content that would've been displayed if there was no content
  #                              expansion defined.
  # - P9K_KUBECONTEXT_NAME       The current context's name. Corresponds to column NAME in the
  #                              output of `kubectl config get-contexts`.
  # - P9K_KUBECONTEXT_CLUSTER    The current context's cluster. Corresponds to column CLUSTER in the
  #                              output of `kubectl config get-contexts`.
  # - P9K_KUBECONTEXT_NAMESPACE  The current context's namespace. Corresponds to column NAMESPACE
  #                              in the output of `kubectl config get-contexts`. If there is no
  #                              namespace, the parameter is set to &quot;default&quot;.
  # - P9K_KUBECONTEXT_USER       The current context's user. Corresponds to column AUTHINFO in the
  #                              output of `kubectl config get-contexts`.
  #
  # If the context points to Google Kubernetes Engine (GKE) or Elastic Kubernetes Service (EKS),
  # the following extra parameters are available:
  #
  # - P9K_KUBECONTEXT_CLOUD_NAME     Either &quot;gke&quot; or &quot;eks&quot;.
  # - P9K_KUBECONTEXT_CLOUD_ACCOUNT  Account/project ID.
  # - P9K_KUBECONTEXT_CLOUD_ZONE     Availability zone.
  # - P9K_KUBECONTEXT_CLOUD_CLUSTER  Cluster.
  #
  # P9K_KUBECONTEXT_CLOUD_* parameters are derived from P9K_KUBECONTEXT_CLUSTER. For example,
  # if P9K_KUBECONTEXT_CLUSTER is &quot;gke_my-account_us-east1-a_my-cluster-01&quot;:
  #
  #   - P9K_KUBECONTEXT_CLOUD_NAME=gke
  #   - P9K_KUBECONTEXT_CLOUD_ACCOUNT=my-account
  #   - P9K_KUBECONTEXT_CLOUD_ZONE=us-east1-a
  #   - P9K_KUBECONTEXT_CLOUD_CLUSTER=my-cluster-01
  #
  # If P9K_KUBECONTEXT_CLUSTER is &quot;arn:aws:eks:us-east-1:123456789012:cluster/my-cluster-01&quot;:
  #
  #   - P9K_KUBECONTEXT_CLOUD_NAME=eks
  #   - P9K_KUBECONTEXT_CLOUD_ACCOUNT=123456789012
  #   - P9K_KUBECONTEXT_CLOUD_ZONE=us-east-1
  #   - P9K_KUBECONTEXT_CLOUD_CLUSTER=my-cluster-01
  typeset -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_CONTENT_EXPANSION=
  # Show P9K_KUBECONTEXT_CLOUD_CLUSTER if it's not empty and fall back to P9K_KUBECONTEXT_NAME.
  POWERLEVEL9K_KUBECONTEXT_DEFAULT_CONTENT_EXPANSION+='${P9K_KUBECONTEXT_CLOUD_CLUSTER:-${P9K_KUBECONTEXT_NAME}}'
  # Append the current context's namespace if it's not &quot;default&quot;.
  POWERLEVEL9K_KUBECONTEXT_DEFAULT_CONTENT_EXPANSION+='${${:-/$P9K_KUBECONTEXT_NAMESPACE}:#/default}'

  # Custom prefix.
  # typeset -g POWERLEVEL9K_KUBECONTEXT_PREFIX='at '

  #[ aws: aws profile (https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html) ]#
  # Show aws only when the the command you are typing invokes one of these tools.
  # Tip: Remove the next line to always show aws.
  typeset -g POWERLEVEL9K_AWS_SHOW_ON_COMMAND='aws|awless|terraform|pulumi|terragrunt'

  # POWERLEVEL9K_AWS_CLASSES is an array with even number of elements. The first element
  # in each pair defines a pattern against which the current AWS profile gets matched.
  # More specifically, it's P9K_CONTENT prior to the application of context expansion (see below)
  # that gets matched. If you unset all POWERLEVEL9K_AWS_*CONTENT_EXPANSION parameters,
  # you'll see this value in your prompt. The second element of each pair in
  # POWERLEVEL9K_AWS_CLASSES defines the profile class. Patterns are tried in order. The
  # first match wins.
  #
  # For example, given these settings:
  #
  #   typeset -g POWERLEVEL9K_AWS_CLASSES=(
  #     '*prod*'  PROD
  #     '*test*'  TEST
  #     '*'       DEFAULT)
  #
  # If your current AWS profile is &quot;company_test&quot;, its class is TEST
  # because &quot;company_test&quot; doesn't match the pattern '*prod*' but does match '*test*'.
  #
  # You can define different colors, icons and content expansions for different classes:
  #
  #   typeset -g POWERLEVEL9K_AWS_TEST_FOREGROUND=28
  #   typeset -g POWERLEVEL9K_AWS_TEST_VISUAL_IDENTIFIER_EXPANSION='⭐'
  #   typeset -g POWERLEVEL9K_AWS_TEST_CONTENT_EXPANSION='&gt; ${P9K_CONTENT} &lt;'
  typeset -g POWERLEVEL9K_AWS_CLASSES=(
      # '*prod*'  PROD    # These values are examples that are unlikely
      # '*test*'  TEST    # to match your needs. Customize them as needed.
      '*'       DEFAULT)
  # typeset -g POWERLEVEL9K_AWS_DEFAULT_FOREGROUND=7
  # typeset -g POWERLEVEL9K_AWS_DEFAULT_BACKGROUND=1
  # typeset -g POWERLEVEL9K_AWS_DEFAULT_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #[ aws_eb_env: aws elastic beanstalk environment (https://aws.amazon.com/elasticbeanstalk/) ]#
  # AWS Elastic Beanstalk environment color.
  # typeset -g POWERLEVEL9K_AWS_EB_ENV_FOREGROUND=2
  # typeset -g POWERLEVEL9K_AWS_EB_ENV_BACKGROUND=0
  # Custom icon.
  # typeset -g POWERLEVEL9K_AWS_EB_ENV_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##########[ azure: azure account name (https://docs.microsoft.com/en-us/cli/azure) ]##########
  # Show azure only when the the command you are typing invokes one of these tools.
  # Tip: Remove the next line to always show azure.
  typeset -g POWERLEVEL9K_AZURE_SHOW_ON_COMMAND='az|terraform|pulumi|terragrunt'
  # Azure account name color.
  # typeset -g POWERLEVEL9K_AZURE_FOREGROUND=7
  # typeset -g POWERLEVEL9K_AZURE_BACKGROUND=4
  # Custom icon.
  # typeset -g POWERLEVEL9K_AZURE_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ##########[ gcloud: google cloud account and project (https://cloud.google.com/) ]###########
  # Show gcloud only when the the command you are typing invokes one of these tools.
  # Tip: Remove the next line to always show gcloud.
  typeset -g POWERLEVEL9K_GCLOUD_SHOW_ON_COMMAND='gcloud|gcs'
  # Google cloud color.
  # typeset -g POWERLEVEL9K_GCLOUD_FOREGROUND=7
  # typeset -g POWERLEVEL9K_GCLOUD_BACKGROUND=4

  # Google cloud format. Change the value of POWERLEVEL9K_GCLOUD_PARTIAL_CONTENT_EXPANSION and/or
  # POWERLEVEL9K_GCLOUD_COMPLETE_CONTENT_EXPANSION if the default is too verbose or not informative
  # enough. You can use the following parameters in the expansions. Each of them corresponds to the
  # output of `gcloud` tool.
  #
  #   Parameter                | Source
  #   -------------------------|--------------------------------------------------------------------
  #   P9K_GCLOUD_CONFIGURATION | gcloud config configurations list --format='value(name)'
  #   P9K_GCLOUD_ACCOUNT       | gcloud config get-value account
  #   P9K_GCLOUD_PROJECT_ID    | gcloud config get-value project
  #   P9K_GCLOUD_PROJECT_NAME  | gcloud projects describe $P9K_GCLOUD_PROJECT_ID --format='value(name)'
  #
  # Note: ${VARIABLE//\%/%%} expands to ${VARIABLE} with all occurrences of '%' replaced with '%%'.
  #
  # Obtaining project name requires sending a request to Google servers. This can take a long time
  # and even fail. When project name is unknown, P9K_GCLOUD_PROJECT_NAME is not set and gcloud
  # prompt segment is in state PARTIAL. When project name gets known, P9K_GCLOUD_PROJECT_NAME gets
  # set and gcloud prompt segment transitions to state COMPLETE.
  #
  # You can customize the format, icon and colors of gcloud segment separately for states PARTIAL
  # and COMPLETE. You can also hide gcloud in state PARTIAL by setting
  # POWERLEVEL9K_GCLOUD_PARTIAL_VISUAL_IDENTIFIER_EXPANSION and
  # POWERLEVEL9K_GCLOUD_PARTIAL_CONTENT_EXPANSION to empty.
  typeset -g POWERLEVEL9K_GCLOUD_PARTIAL_CONTENT_EXPANSION='${P9K_GCLOUD_PROJECT_ID//\%/%%}'
  typeset -g POWERLEVEL9K_GCLOUD_COMPLETE_CONTENT_EXPANSION='${P9K_GCLOUD_PROJECT_NAME//\%/%%}'

  # Send a request to Google (by means of `gcloud projects describe ...`) to obtain project name
  # this often. Negative value disables periodic polling. In this mode project name is retrieved
  # only when the current configuration, account or project id changes.
  typeset -g POWERLEVEL9K_GCLOUD_REFRESH_PROJECT_NAME_SECONDS=60

  # Custom icon.
  # typeset -g POWERLEVEL9K_GCLOUD_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #[ google_app_cred: google application credentials (https://cloud.google.com/docs/authentication/production) ]#
  # Show google_app_cred only when the the command you are typing invokes one of these tools.
  # Tip: Remove the next line to always show google_app_cred.
  typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_SHOW_ON_COMMAND='terraform|pulumi|terragrunt'

  # Google application credentials classes for the purpose of using different colors, icons and
  # expansions with different credentials.
  #
  # POWERLEVEL9K_GOOGLE_APP_CRED_CLASSES is an array with even number of elements. The first
  # element in each pair defines a pattern against which the current kubernetes context gets
  # matched. More specifically, it's P9K_CONTENT prior to the application of context expansion
  # (see below) that gets matched. If you unset all POWERLEVEL9K_GOOGLE_APP_CRED_*CONTENT_EXPANSION
  # parameters, you'll see this value in your prompt. The second element of each pair in
  # POWERLEVEL9K_GOOGLE_APP_CRED_CLASSES defines the context class. Patterns are tried in order.
  # The first match wins.
  #
  # For example, given these settings:
  #
  #   typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_CLASSES=(
  #     '*:*prod*:*'  PROD
  #     '*:*test*:*'  TEST
  #     '*'           DEFAULT)
  #
  # If your current Google application credentials is &quot;service_account deathray-testing x@y.com&quot;,
  # its class is TEST because it doesn't match the pattern '* *prod* *' but does match '* *test* *'.
  #
  # You can define different colors, icons and content expansions for different classes:
  #
  #   typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_TEST_FOREGROUND=28
  #   typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_TEST_VISUAL_IDENTIFIER_EXPANSION='⭐'
  #   typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_TEST_CONTENT_EXPANSION='$P9K_GOOGLE_APP_CRED_PROJECT_ID'
  typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_CLASSES=(
      # '*:*prod*:*'  PROD    # These values are examples that are unlikely
      # '*:*test*:*'  TEST    # to match your needs. Customize them as needed.
      '*'             DEFAULT)
  # typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_DEFAULT_FOREGROUND=7
  # typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_DEFAULT_BACKGROUND=4
  # typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_DEFAULT_VISUAL_IDENTIFIER_EXPANSION='⭐'

  # Use POWERLEVEL9K_GOOGLE_APP_CRED_CONTENT_EXPANSION to specify the content displayed by
  # google_app_cred segment. Parameter expansions are very flexible and fast, too. See reference:
  # http://zsh.sourceforge.net/Doc/Release/Expansion.html#Parameter-Expansion.
  #
  # You can use the following parameters in the expansion. Each of them corresponds to one of the
  # fields in the JSON file pointed to by GOOGLE_APPLICATION_CREDENTIALS.
  #
  #   Parameter                        | JSON key file field
  #   ---------------------------------+---------------
  #   P9K_GOOGLE_APP_CRED_TYPE         | type
  #   P9K_GOOGLE_APP_CRED_PROJECT_ID   | project_id
  #   P9K_GOOGLE_APP_CRED_CLIENT_EMAIL | client_email
  #
  # Note: ${VARIABLE//\%/%%} expands to ${VARIABLE} with all occurrences of '%' replaced by '%%'.
  typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_DEFAULT_CONTENT_EXPANSION='${P9K_GOOGLE_APP_CRED_PROJECT_ID//\%/%%}'

  ###############################[ public_ip: public IP address ]###############################
  # Public IP color.
  # typeset -g POWERLEVEL9K_PUBLIC_IP_FOREGROUND=7
  # typeset -g POWERLEVEL9K_PUBLIC_IP_BACKGROUND=0
  # Custom icon.
  # typeset -g POWERLEVEL9K_PUBLIC_IP_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ########################[ vpn_ip: virtual private network indicator ]#########################
  # VPN IP color.
  # typeset -g POWERLEVEL9K_VPN_IP_FOREGROUND=0
  # typeset -g POWERLEVEL9K_VPN_IP_BACKGROUND=6
  # When on VPN, show just an icon without the IP address.
  # Tip: To display the private IP address when on VPN, remove the next line.
  typeset -g POWERLEVEL9K_VPN_IP_CONTENT_EXPANSION=
  # Regular expression for the VPN network interface. Run `ifconfig` or `ip -4 a show` while on VPN
  # to see the name of the interface.
  typeset -g POWERLEVEL9K_VPN_IP_INTERFACE='(gpd|wg|(.*tun))[0-9]*'
  # If set to true, show one segment per matching network interface. If set to false, show only
  # one segment corresponding to the first matching network interface.
  # Tip: If you set it to true, you'll probably want to unset POWERLEVEL9K_VPN_IP_CONTENT_EXPANSION.
  typeset -g POWERLEVEL9K_VPN_IP_SHOW_ALL=false
  # Custom icon.
  # typeset -g POWERLEVEL9K_VPN_IP_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ###########[ ip: ip address and bandwidth usage for a specified network interface ]###########
  # IP color.
  typeset -g POWERLEVEL9K_IP_BACKGROUND=4
  typeset -g POWERLEVEL9K_IP_FOREGROUND=0
  # The following parameters are accessible within the expansion:
  #
  #   Parameter             | Meaning
  #   ----------------------+---------------
  #   P9K_IP_IP         | IP address
  #   P9K_IP_INTERFACE  | network interface
  #   P9K_IP_RX_BYTES   | total number of bytes received
  #   P9K_IP_TX_BYTES   | total number of bytes sent
  #   P9K_IP_RX_RATE    | receive rate (since last prompt)
  #   P9K_IP_TX_RATE    | send rate (since last prompt)
  typeset -g POWERLEVEL9K_IP_CONTENT_EXPANSION='${P9K_IP_RX_RATE:+⇣$P9K_IP_RX_RATE }${P9K_IP_TX_RATE:+⇡$P9K_IP_TX_RATE }$P9K_IP_IP'
  # Show information for the first network interface whose name matches this regular expression.
  # Run `ifconfig` or `ip -4 a show` to see the names of all network interfaces.
  typeset -g POWERLEVEL9K_IP_INTERFACE='e.*'
  # Custom icon.
  # typeset -g POWERLEVEL9K_IP_VISUAL_IDENTIFIER_EXPANSION='⭐'

  #########################[ proxy: system-wide http/https/ftp proxy ]##########################
  # Proxy color.
  # typeset -g POWERLEVEL9K_PROXY_FOREGROUND=4
  # typeset -g POWERLEVEL9K_PROXY_BACKGROUND=0
  # Custom icon.
  # typeset -g POWERLEVEL9K_PROXY_VISUAL_IDENTIFIER_EXPANSION='⭐'

  ################################[ battery: internal battery ]#################################
  # Show battery in red when it's below this level and not connected to power supply.
  typeset -g POWERLEVEL9K_BATTERY_LOW_THRESHOLD=20
  typeset -g POWERLEVEL9K_BATTERY_LOW_FOREGROUND=1
  # Show battery in green when it's charging or fully charged.
  typeset -g POWERLEVEL9K_BATTERY_{CHARGING,CHARGED}_FOREGROUND=2
  # Show battery in yellow when it's discharging.
  typeset -g POWERLEVEL9K_BATTERY_DISCONNECTED_FOREGROUND=3
  # Battery pictograms going from low to high level of charge.
  typeset -g POWERLEVEL9K_BATTERY_STAGES='\uf58d\uf579\uf57a\uf57b\uf57c\uf57d\uf57e\uf57f\uf580\uf581\uf578'
  # Don't show the remaining time to charge/discharge.
  typeset -g POWERLEVEL9K_BATTERY_VERBOSE=false
  # typeset -g POWERLEVEL9K_BATTERY_BACKGROUND=0

  #####################################[ wifi: wifi speed ]#####################################
  # WiFi color.
  # typeset -g POWERLEVEL9K_WIFI_FOREGROUND=0
  # typeset -g POWERLEVEL9K_WIFI_BACKGROUND=4
  # Custom icon.
  # typeset -g POWERLEVEL9K_WIFI_VISUAL_IDENTIFIER_EXPANSION='⭐'

  # Use different colors and icons depending on signal strength ($P9K_WIFI_BARS).
  #
  #   # Wifi colors and icons for different signal strength levels (low to high).
  #   typeset -g my_wifi_fg=(0 0 0 0 0)                                # &lt;-- change these values
  #   typeset -g my_wifi_icon=('WiFi' 'WiFi' 'WiFi' 'WiFi' 'WiFi')     # &lt;-- change these values
  #
  #   typeset -g POWERLEVEL9K_WIFI_CONTENT_EXPANSION='%F{${my_wifi_fg[P9K_WIFI_BARS+1]}}$P9K_WIFI_LAST_TX_RATE Mbps'
  #   typeset -g POWERLEVEL9K_WIFI_VISUAL_IDENTIFIER_EXPANSION='%F{${my_wifi_fg[P9K_WIFI_BARS+1]}}${my_wifi_icon[P9K_WIFI_BARS+1]}'
  #
  # The following parameters are accessible within the expansions:
  #
  #   Parameter             | Meaning
  #   ----------------------+---------------
  #   P9K_WIFI_SSID         | service set identifier, a.k.a. network name
  #   P9K_WIFI_LINK_AUTH    | authentication protocol such as &quot;wpa2-psk&quot; or &quot;none&quot;; empty if unknown
  #   P9K_WIFI_LAST_TX_RATE | wireless transmit rate in megabits per second
  #   P9K_WIFI_RSSI         | signal strength in dBm, from -120 to 0
  #   P9K_WIFI_NOISE        | noise in dBm, from -120 to 0
  #   P9K_WIFI_BARS         | signal strength in bars, from 0 to 4 (derived from P9K_WIFI_RSSI and P9K_WIFI_NOISE)

  ####################################[ time: current time ]####################################
  # Current time color.
  # typeset -g POWERLEVEL9K_TIME_FOREGROUND=0
  typeset -g POWERLEVEL9K_TIME_BACKGROUND=7
  # Format for the current time: 09:51:02. See `man 3 strftime`.
  typeset -g POWERLEVEL9K_TIME_FORMAT='%D{%H:%M:%S}'
  # If set to true, time will update when you hit enter. This way prompts for the past
  # commands will contain the start times of their commands as opposed to the default
  # behavior where they contain the end times of their preceding commands.
  typeset -g POWERLEVEL9K_TIME_UPDATE_ON_COMMAND=false
  # Custom icon.
  # typeset -g POWERLEVEL9K_TIME_VISUAL_IDENTIFIER_EXPANSION='⭐'
  # Custom prefix.
  # typeset -g POWERLEVEL9K_TIME_PREFIX='at '

  # Example of a user-defined prompt segment. Function prompt_example will be called on every
  # prompt if `example` prompt segment is added to POWERLEVEL9K_LEFT_PROMPT_ELEMENTS or
  # POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS. It displays an icon and yellow text on red background
  # greeting the user.
  #
  # Type `p10k help segment` for documentation and a more sophisticated example.
  function prompt_example() {
    p10k segment -b 1 -f 3 -i '⭐' -t 'hello, %n'
  }

  # User-defined prompt segments may optionally provide an instant_prompt_* function. Its job
  # is to generate the prompt segment for display in instant prompt. See
  # https://github.com/romkatv/powerlevel10k/blob/master/README.md#instant-prompt.
  #
  # Powerlevel10k will call instant_prompt_* at the same time as the regular prompt_* function
  # and will record all `p10k segment` calls it makes. When displaying instant prompt, Powerlevel10k
  # will replay these calls without actually calling instant_prompt_*. It is imperative that
  # instant_prompt_* always makes the same `p10k segment` calls regardless of environment. If this
  # rule is not observed, the content of instant prompt will be incorrect.
  #
  # Usually, you should either not define instant_prompt_* or simply call prompt_* from it. If
  # instant_prompt_* is not defined for a segment, the segment won't be shown in instant prompt.
  function instant_prompt_example() {
    # Since prompt_example always makes the same `p10k segment` calls, we can call it from
    # instant_prompt_example. This will give us the same `example` prompt segment in the instant
    # and regular prompts.
    prompt_example
  }

  # User-defined prompt segments can be customized the same way as built-in segments.
  # typeset -g POWERLEVEL9K_EXAMPLE_FOREGROUND=3
  # typeset -g POWERLEVEL9K_EXAMPLE_VISUAL_IDENTIFIER_EXPANSION='⭐'

  # Transient prompt works similarly to the builtin transient_rprompt option. It trims down prompt
  # when accepting a command line. Supported values:
  #
  #   - off:      Don't change prompt when accepting a command line.
  #   - always:   Trim down prompt when accepting a command line.
  #   - same-dir: Trim down prompt when accepting a command line unless this is the first command
  #               typed after changing current working directory.
  typeset -g POWERLEVEL9K_TRANSIENT_PROMPT=off

  # Instant prompt mode.
  #
  #   - off:     Disable instant prompt. Choose this if you've tried instant prompt and found
  #              it incompatible with your zsh configuration files.
  #   - quiet:   Enable instant prompt and don't print warnings when detecting console output
  #              during zsh initialization. Choose this if you've read and understood
  #              https://github.com/romkatv/powerlevel10k/blob/master/README.md#instant-prompt.
  #   - verbose: Enable instant prompt and print a warning when detecting console output during
  #              zsh initialization. Choose this if you've never tried instant prompt, haven't
  #              seen the warning, or if you are unsure what this all means.
  typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

  # Hot reload allows you to change POWERLEVEL9K options after Powerlevel10k has been initialized.
  # For example, you can type POWERLEVEL9K_BACKGROUND=red and see your prompt turn red. Hot reload
  # can slow down prompt by 1-2 milliseconds, so it's better to keep it turned off unless you
  # really need it.
  typeset -g POWERLEVEL9K_DISABLE_HOT_RELOAD=true

  # If p10k is already loaded, reload configuration.
  # This works even with POWERLEVEL9K_DISABLE_HOT_RELOAD=true.
  (( ! $+functions[p10k] )) || p10k reload
}

# Tell `p10k configure` which file it should overwrite.
typeset -g POWERLEVEL9K_CONFIG_FILE=${${(%):-%x}:a}

(( ${#p10k_config_opts} )) &amp;&amp; setopt ${p10k_config_opts[@]}
'builtin' 'unset' 'p10k_config_opts'
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[大一暑假总结]]></title>
        <id>https://Covatubala.github.io/post/da-yi-shu-jia-ji-lu/</id>
        <link href="https://Covatubala.github.io/post/da-yi-shu-jia-ji-lu/">
        </link>
        <updated>2022-08-06T03:48:09.000Z</updated>
        <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>日期</th>
<th>地点</th>
<th>状态</th>
</tr>
</thead>
<tbody>
<tr>
<td>5.23——5.30</td>
<td>「郑州」格林豪泰</td>
<td>集中隔离</td>
</tr>
<tr>
<td>5.31——6.7</td>
<td>「郑州」万达商场</td>
<td>居家隔离，实际❌</td>
</tr>
<tr>
<td>6.8——6.12</td>
<td>「南阳」物业大平层</td>
<td>期末考各种被请吃饭，逛了逛诸葛庐，南阳府衙，回老家</td>
</tr>
<tr>
<td>6.13——6.18</td>
<td>「石家庄」杨村</td>
<td>陪姥姥</td>
</tr>
<tr>
<td>6.19——7.3</td>
<td>「兰州」「武威」「腾格尔沙漠」</td>
<td>绿格社会实践</td>
</tr>
<tr>
<td>7.4——7.</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac使用疑点Q&A]]></title>
        <id>https://Covatubala.github.io/post/mac-shi-yong-yi-dian-qanda/</id>
        <link href="https://Covatubala.github.io/post/mac-shi-yong-yi-dian-qanda/">
        </link>
        <updated>2022-08-02T02:19:36.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>Markdown不支持段首空格的展示？<br>
option+space输入两个全角空格，宽度整整两个汉字很整齐</li>
<li>直接在 Markdown 里用空格和 Tab 键缩进在渲染后会被忽略掉？<br>
借助 HTML 转义字符在行首添加空格来实现，<code>&amp;ensp;</code>代表半角空格，<code>&amp;emsp;</code> 代表全角空格。</li>
<li>Markdown制作表单时内容物需要用到｜？<br>
借助 HTML 转义字符<code>&amp;#124;</code></li>
<li>更改中/英切换键为escape后怎么切换中英文？<br>
control+space</li>
<li>任务列表？<br>
<code>- [x] 跑路</code>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2903445"><label class="task-list-item-label" for="task-item-2903445"> 跑路</label></li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Missing Semester of Your CS Education学习笔记]]></title>
        <id>https://Covatubala.github.io/post/missing-semester-xue-xi-bi-ji/</id>
        <link href="https://Covatubala.github.io/post/missing-semester-xue-xi-bi-ji/">
        </link>
        <updated>2022-08-01T07:08:35.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://missing-semester-cn.github.io">计算机教育中缺失的一课</a></p>
<h1 id="113-课程概览与-shell">1/13: 课程概览与 shell</h1>
<h2 id="命令行语句">命令行语句</h2>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>pwd</td>
<td>输出当前位置</td>
</tr>
<tr>
<td>cd .</td>
<td>到当前目录</td>
</tr>
<tr>
<td>cd ..</td>
<td>上一级目录</td>
</tr>
<tr>
<td>cd /cd ~</td>
<td>回到家目录</td>
</tr>
<tr>
<td>cd -</td>
<td>回到跳转前的目录</td>
</tr>
<tr>
<td>ls -l</td>
<td>列出当前目录下子文件的详细信息</td>
</tr>
<tr>
<td>ls -a</td>
<td>列出所有文件包含隐藏文件</td>
</tr>
<tr>
<td>* ?</td>
<td>代替一个字符串 一个字符</td>
</tr>
<tr>
<td>mv A B</td>
<td>重命名并可以移动文件</td>
</tr>
<tr>
<td>cp A B</td>
<td>复制并可以移动文件</td>
</tr>
<tr>
<td>control L</td>
<td>清除终端</td>
</tr>
<tr>
<td>cat</td>
<td>打印文件内容到终端上</td>
</tr>
<tr>
<td>touch</td>
<td>建立新文件</td>
</tr>
<tr>
<td>&gt;&gt;</td>
<td>不覆盖而是叠加</td>
</tr>
<tr>
<td>A | B</td>
<td>A的输出作为B的输入</td>
</tr>
<tr>
<td>grep  A B</td>
<td>在A里查找B</td>
</tr>
<tr>
<td>man,rm,mkdir,rmdir</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="杂七杂八">杂七杂八</h2>
<ul>
<li>修改计算机名称（设备名称）为美少女小柳婼的MacBookPro15：<br>
<code>sudo scutil —set ComputerName 美少女小柳婼的MacBookPro15</code></li>
<li>修改主机名（终端前面的名字）为liuchuo：<br>
<code>sudo scutil —set HostName liuchuo</code></li>
<li>--后边的内容会被当作普通文件而不是参数</li>
<li>markdown编辑表格时输入|用<code>&amp;#124;</code>代替</li>
</ul>
<h1 id="114-shell-工具和脚本">1/14: Shell 工具和脚本</h1>
<h2 id="参数含义">$参数含义</h2>
<p>在编写 Linux bash shell 脚本时，经常会用到 <code>$0、$1、$2、$#、$@、$*、$? </code>等参数，下面具体说明这些参数的含义。</p>
<p>假设执行 ./test.sh a b c 这样一个命令，则可以使用下面的参数来获取一些值：</p>
<pre><code>$0 对应 &quot;./test.sh&quot; 这个值。如果执行的是 ./work/test.sh， 则对应 ./work/test.sh 这个值，而不是只返回文件名本身的部分。
$1 会获取到 a，即 $1 对应传给脚本的第一个参数。
$2 会获取到 b，即 $2 对应传给脚本的第二个参数。
$3 会获取到 c，即 $3 对应传给脚本的第三个参数。$4,$5等参数的含义依此类推。
$# 会获取到 3，对应传入脚本的参数个数，统计的参数不包括 $0 。
$@ 会获取到 &quot;a&quot; &quot;b&quot; &quot;c&quot;，也就是所有参数的列表，不包括 $0 。
$* 也会获取到 &quot;a&quot; &quot;b&quot; &quot;c&quot;， 其值和 $@ 相同。但 &quot;$*&quot; 和 &quot;$@&quot; 有所不同。&quot;$*&quot; 把所有参数合并成一个字符串，而 &quot;$@&quot; 会得到一个字符串参数数组。
$? 可以获取到执行 ./test.sh a b c 命令后的返回值。在执行一个前台命令后，可以立即用 $? 获取到该命令的返回值。该命令可以是系统自身的命令，可以是 shell 脚本，也可以是自定义的 bash 函数。
当执行系统自身的命令时，$? 对应这个命令的返回值。
当执行 shell 脚本时，$? 对应该脚本调用 exit 命令返回的值。如果没有主动调用 exit 命令，默认返回为 0。
当执行自定义的 bash 函数时，$? 对应该函数调用 return 命令返回的值。如果没有主动调用 return 命令，默认返回为 0。
</code></pre>
<p>下面举例说明 &quot;<code>$*</code>&quot; 和 &quot;<code>$@</code>&quot; 的差异。假设有一个 testparams.sh 脚本，内容如下：</p>
<pre><code class="language-sh">#!/bin/bash

for arg in &quot;$*&quot;; do
    echo &quot;****:&quot; $arg
done
echo --------------
for arg in &quot;$@&quot;; do
    echo &quot;@@@@:&quot; $arg
done
</code></pre>
<p>这个脚本分别遍历 &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">和</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">*&quot; 和 &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mord">&quot;</span><span class="mord cjk_fallback">和</span><span class="mord">&quot;</span></span></span></span>@&quot; 扩展后的内容，并打印出来。执行 ./testparams.sh，结果如下：</p>
<pre><code>$ ./testparams.sh This is a test
****: This is a test
--------------
@@@@: This
@@@@: is
@@@@: a
@@@@: test
可以看到，&quot;$*&quot; 只产生一个字符串，for 循环只遍历一次。
而 &quot;$@&quot; 产生了多个字符串，for 循环遍历多次，是一个字符串参数数组。
</code></pre>
<p>注意：如果传入的参数多于 9 个，则不能使用 $10 来引用第 10 个参数，而是要用 ${10} 来引用。即，需要用大括号{}把大于 9 的数字括起来。</p>
<h2 id="bash中-21-的解释">bash中 2&gt;&amp;1 &amp; 的解释</h2>
<ol>
<li>首先，bash中0，1，2三个数字分别代表STDIN_FILENO、STDOUT_FILENO、STDERR_FILENO，即标准输入（一般是键盘），标准输出（一般是显示屏，准确的说是用户终端控制台），标准错误（出错信息输出）。</li>
</ol>
<table>
<thead>
<tr>
<th>0</th>
<th>1</th>
<th>2</th>
</tr>
</thead>
<tbody>
<tr>
<td>标准输入</td>
<td>标准输出</td>
<td>标准错误</td>
</tr>
</tbody>
</table>
<ol start="2">
<li>
<p>输入输出可以重定向，所谓重定向输入就是在命令中指定具体的输入来源，譬如 cat &lt; test.c 将test.c重定向为cat命令的输入源。<br>
输出重定向是指定具体的输出目标以替换默认的标准输出，譬如ls &gt; 1.txt将ls的结果从标准输出重定向为1.txt文本。有时候会看到如 ls &gt;&gt; 1.txt这类的写法。 &gt; 和 &gt;&gt; 的区别在于：&gt; 用于新建而&gt;&gt;用于追加。</p>
</li>
<li>
<p>到了此时，你应该也能猜到2&gt;&amp;1&amp;的用意了。不错，2&gt;&amp;1就是用来将标准错误2重定向到标准输出1中的。此处1前面的&amp;就是为了让bash将1解释成标准输出而不是文件1。至于最后一个&amp;，则是让bash在后台执行。</p>
</li>
</ol>
<p><strong>标准错误重定向到标准输出并且在后台执行。</strong></p>
<h2 id="利用脚本解决现实问题">利用脚本解决现实问题</h2>
<p>我的Gridea自从升级到最新版本就不再需要Github Desktop每次的push origin了，只需要在OneDrive文件夹内直接git bash就好，虽然简单了一丢丢（其实都没啥麻烦的），然而还是需要每次都手动上传，因此我打算利用shell制作一个每天定时运行的脚本，来自动上传我每天更新好的笔记。<br>
<em>2022年 8月 1日 星期一 08时59分38秒 CST</em><br>
血与泪的教训，命令行里手不要太快呜呜呜，刚写的bash不小心就rm掉了还不可逆～</p>
<pre><code class="language-sh">#!/bin/bash
update(){
    cd &quot;/Users/cova/OneDrive/Gridea/output&quot;
    git checkout --orphan latest_branch
    git add -A
    git commit -am &quot;Update&quot;
    git branch -D master
    git branch -m master
    git push -f origin master
    cd $HOME
    echo $(DATE) &gt;&gt; update.txt
}
</code></pre>
<p>这是update.sh的代码，除此之外为了实现定时自动上传，还需要crontab辅助<br>
<a href="http://t.zoukankan.com/EasonJim-p-7819635.html">crontab相关1</a><br>
<a href="https://blog.csdn.net/datastructure18/article/details/121573809">crontab相关2</a></p>
<h1 id="115-编辑器-vim">1/15: 编辑器 (Vim)</h1>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>w</td>
<td>向右移动一个词头</td>
</tr>
<tr>
<td>b</td>
<td>向左移动一个词头</td>
</tr>
<tr>
<td>e</td>
<td>向右移动一个词末</td>
</tr>
<tr>
<td>0</td>
<td>移动到行首</td>
</tr>
<tr>
<td>$</td>
<td>移动到行末</td>
</tr>
<tr>
<td>Ctrl u</td>
<td>滚动上升</td>
</tr>
<tr>
<td>Ctrl d</td>
<td>滚动下降</td>
</tr>
<tr>
<td>G</td>
<td>到最下方</td>
</tr>
<tr>
<td>gg</td>
<td>到最上方</td>
</tr>
<tr>
<td>L M H</td>
<td>光标移到屏幕最下方行 中间行 最上方行</td>
</tr>
<tr>
<td>fb</td>
<td>找到光标行第一个b</td>
</tr>
<tr>
<td>x</td>
<td>delete</td>
</tr>
<tr>
<td>rb</td>
<td>delete并replace成b</td>
</tr>
<tr>
<td>Ctrl r</td>
<td>反撤回</td>
</tr>
<tr>
<td>y</td>
<td>复制</td>
</tr>
<tr>
<td>:/a</td>
<td>搜索a，按n下一个</td>
</tr>
<tr>
<td>o</td>
<td>在当前行下开一行进入insert模式</td>
</tr>
<tr>
<td>&gt;&gt; &lt;&lt; ==</td>
<td>增加一级 减少一级 取消全部  缩进</td>
</tr>
<tr>
<td>a</td>
<td>在光标之后添加</td>
</tr>
</tbody>
</table>
<h1 id="116-数据整理">1/16: 数据整理</h1>
<h2 id="正则表达式">正则表达式</h2>
<p>正则表达式非常常见也非常有用。<br>
让我们从这一句正则表达式开始学习： /.*Disconnected from /。<br>
正则表达式通常以（尽管并不总是） /开始和结束。<br>
大多数的 ASCII 字符都表示它们本来的含义，但是有一些字符确实具有表示匹配行为的“特殊”含义。<br>
不同字符所表示的含义，根据正则表达式的实现方式不同，也会有所变化，这一点确实令人沮丧。<br>
常见的模式有：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>除换行符之外的”任意单个字符”</td>
</tr>
<tr>
<td>*</td>
<td>匹配前面字符零次或多次</td>
</tr>
<tr>
<td>+</td>
<td>匹配前面字符一次或多次</td>
</tr>
<tr>
<td>[abc]</td>
<td>匹配 a, b 和 c 中的任意一个</td>
</tr>
<tr>
<td>(RX1|RX2)</td>
<td>任何能够匹配RX1 或 RX2的结果</td>
</tr>
<tr>
<td>^</td>
<td>行首</td>
</tr>
<tr>
<td>$</td>
<td>行尾</td>
</tr>
</tbody>
</table>
<h2 id="不熟悉git">不熟悉Git？</h2>
<p><a href="https://learngitbranching.js.org/?locale=zh_CN">Learn Git Branching</a></p>
<h1 id="121-命令行环境">1/21: 命令行环境</h1>
<h2 id="远程连接ssh">远程连接(SSH)</h2>
<p>不是很懂，以后补坑。</p>
<h1 id="122-版本控制git">1/22: 版本控制(Git)</h1>
<p>版本控制系统 (VCSs) 是一类用于追踪源代码（或其他文件、文件夹）改动的工具。顾名思义，这些工具可以帮助我们管理代码的修改历史；不仅如此，它还可以让协作编码变得更方便。VCS通过一系列的快照将某个文件夹及其内容保存了起来，每个快照都包含了文件或文件夹的完整状态。同时它还维护了快照创建者的信息以及每个快照的相关信息等等。</p>
<h2 id="git-的命令行接口">Git 的命令行接口</h2>
<h3 id="基础">基础</h3>
<p>git help <command>: 获取 git 命令的帮助信息<br>
git init: 创建一个新的 git 仓库，其数据会存放在一个名为 .git 的目录下<br>
git status: 显示当前的仓库状态<br>
git add <filename>: 添加文件到暂存区<br>
git commit: 创建一个新的提交<br>
如何编写 良好的提交信息!<br>
为何要 编写良好的提交信息<br>
git log: 显示历史日志<br>
git log --all --graph --decorate: 可视化历史记录（有向无环图）<br>
git diff <filename>: 显示与暂存区文件的差异<br>
git diff <revision> <filename>: 显示某个文件两个版本之间的差异<br>
git checkout <revision>: 更新 HEAD 和目前的分支<br>
分支和合并</p>
<p>git branch: 显示分支<br>
git branch <name>: 创建分支<br>
git checkout -b <name>: 创建分支并切换到该分支<br>
相当于 git branch <name>; git checkout <name><br>
git merge <revision>: 合并到当前分支<br>
git mergetool: 使用工具来处理合并冲突<br>
git rebase: 将一系列补丁变基（rebase）为新的基线</p>
<h3 id="远端操作">远端操作</h3>
<p>git remote: 列出远端<br>
git remote add <name> <url>: 添加一个远端<br>
git push <remote> <local branch>:<remote branch>: 将对象传送至远端并更新远端引用<br>
git branch --set-upstream-to=<remote>/<remote branch>: 创建本地和远端分支的关联关系<br>
git fetch: 从远端获取对象/索引<br>
git pull: 相当于 git fetch; git merge<br>
git clone: 从远端下载仓库</p>
<h3 id="撤销">撤销</h3>
<p>git commit --amend: 编辑提交的内容或信息<br>
git reset HEAD <file>: 恢复暂存的文件<br>
git checkout -- <file>: 丢弃修改<br>
git restore: git2.32版本后取代git reset 进行许多撤销操作</p>
<h3 id="git-高级操作">Git 高级操作</h3>
<p>git config: Git 是一个 高度可定制的 工具<br>
git clone --depth=1: 浅克隆（shallow clone），不包括完整的版本历史信息<br>
git add -p: 交互式暂存<br>
git rebase -i: 交互式变基<br>
git blame: 查看最后修改某行的人<br>
git stash: 暂时移除工作目录下的修改内容<br>
git bisect: 通过二分查找搜索历史记录<br>
.gitignore: 指定 故意不追踪的文件</p>
<h3 id="杂项">杂项</h3>
<p>图形用户界面: Git 的 图形用户界面客户端 有很多，但是我们自己并不使用这些图形用户界面的客户端，我们选择使用命令行接口<br>
Shell 集成: 将 Git 状态集成到您的 shell 中会非常方便。(zsh, bash)。Oh My Zsh这样的框架中一般以及集成了这一功能<br>
编辑器集成: 和上面一条类似，将 Git 集成到编辑器中好处多多。fugitive.vim 是 Vim 中集成 GIt 的常用插件<br>
工作流: 我们已经讲解了数据模型与一些基础命令，但还没讨论到进行大型项目时的一些惯例 ( 有很多 不同的 处理方法)<br>
GitHub: Git 并不等同于 GitHub。 在 GitHub 中您需要使用一个被称作拉取请求（pull request）的方法来向其他项目贡献代码<br>
其他 Git 提供商: GitHub 并不是唯一的。还有像 GitLab 和 BitBucket 这样的平台。</p>
<h1 id="123-调试及性能分析">1/23: 调试及性能分析</h1>
<h1 id="127-元编程">1/27: 元编程</h1>
<h1 id="128-安全和密码学">1/28: 安全和密码学</h1>
<h1 id="129-大杂烩">1/29: 大杂烩</h1>
<h1 id="130-提问回答">1/30: 提问&amp;回答</h1>
<p>剩下的这几课由于当前不了解不需要，所以没有看视频只是把文档看了看，如果后期有需要再来回顾吧。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[杂谈Emo]]></title>
        <id>https://Covatubala.github.io/post/za-tan-emo/</id>
        <link href="https://Covatubala.github.io/post/za-tan-emo/">
        </link>
        <updated>2022-08-01T06:50:17.000Z</updated>
        <content type="html"><![CDATA[<p>睡不着和起太早具有一样的感伤效力。</p>
<p>个人一直认为所谓emo其实是一天中突然时间无法被各种活动占据，短促放空而诞生的茫然造成的，茫然紧接着便成了焦虑感伤悲情等，这可能是最正常不过的现象了，只是每个年代的称呼不同罢了，文人墨客的空怀报国志却无以为继因而满腹牢骚，苏轼半夜睡不着觉也会硬生生拉起来张怀民与他共度这一天中最孤寂时光。</p>
<p>你可以抵挡住这份emo，但你不能永远。</p>
<p>夜幕笼罩下的万籁俱寂是这份emo的充分条件。浑浑噩噩忙碌一天，终于磨到了一个看似属于自己的私人时间，却在某一个片刻茫然四顾，一片寂静无人问津，有道是凄凄冷冷凄凄。</p>
<p>总有些事情别人无法感同身受是也是emo必不可少的原因之一。倘使问题可以以牢骚的形式吐露出来，那不管什么都会缓和许多，这个过程其实就是在讲给自己听，安慰自己，“好啦好啦你的痛苦被拆解出去啦不要再难受啦”。可惜再亲密无间的关系也总有不可分享，难以言述的事情，被别人摸透是一件很恐怖的事情。</p>
<p>有能力去反思并且愿意去反思才是emo形成的关键。要意识到自己的碌碌无为，并且接受它，和自己和解可并不容易。白天庸碌的生活无暇思考，晚上也本可以一样通过各种奶头乐逃避现实麻痹自己。选择了emo，即使是夜晚短暂型，哪怕第二天太阳升起行为不会有丝毫改变，也是在想要改变，杀死那个自己。</p>
<p>反思不是很容易。“知错就改，善莫大焉”，人的是非观一旦建立很难改变，没有谁会闲的没事做一件自己思维里的错事，所以当观念冲撞，思维悖行，双方唇枪舌剑你来我往。然而，最终只能决出一位胜者，那自然是最符合人民群众的思维最能得到认同，至于得到认同的又是否是正确的，这就不是我能说的了。</p>
<p>一个人，做着自己认为十分正确的事情却被他人指责，想想便有几分可怜。但，可怜之人必有可恨之处。倘使可怜之物就要受人怜爱，那这世间万物总能找到些说法来争宠了。</p>
<p>可怜本应是向上的动力，它绝不应成为蛀虫的泡影。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[极简主义]]></title>
        <id>https://Covatubala.github.io/post/ji-jian-zhu-yi/</id>
        <link href="https://Covatubala.github.io/post/ji-jian-zhu-yi/">
        </link>
        <updated>2022-08-01T06:48:07.000Z</updated>
        <content type="html"><![CDATA[<p>什么是真正的极简主义？</p>
<p>对我来说，就是黑白地带多过灰色地带。</p>
<p>读书的时候真的在读书，打游戏的时候真的就在打游戏，和朋友聚会的时候真的就在聊天和交心，陪爸爸妈妈女友的时候真的就是用心关爱和倾听，发呆的时候就全身心放空只和自己相处。</p>
<p>我们内心的纷扰在于我们在做A的时候担心B，在做B的时候憧憬C。这样无数交织和循环的灰色地带是生活复杂的源泉。</p>
<p>你会看到有些人做的事情很多，每天要疯狂地拼命地玩，要挥汗如雨的运动，要和女朋友相处，但是转换到学习的时候，就像按一个开关，切换模式。你可以脑中清晰地画出他们的时间表。但是反观自己的时间，好像混混沌沌说不出来干了些什么。</p>
<p>极简应该不在于拥有很少的用品，很节制的人际圈，很精练的生活理念。没有那么多对于自己的限制。</p>
<p>极简在于每一段你消逝的时光，都被明确（不是<strong>正确</strong>）和快乐的使用了。</p>
]]></content>
    </entry>
</feed>